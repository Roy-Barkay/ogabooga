"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _styles = require("@material-ui/core/styles");

var _default2 = _interopRequireDefault(require("./Themes/default"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ThemeProvider = function ThemeProvider(props) {
  var children = props.children,
      theme = props.theme,
      productionPrefix = props.productionPrefix,
      seed = props.seed,
      disableGlobal = props.disableGlobal; // currently we have only one theme
  // will be filled with more themes if necessary

  var getTheme = function getTheme(t) {
    var ret = null;

    switch (t) {
      case 'default':
        ret = _default2.default;
        break;

      default:
        ret = null;
        break;
    }

    return ret;
  };

  var pageTheme = getTheme(theme);
  var generateClassName = (0, _styles.createGenerateClassName)({
    productionPrefix: productionPrefix,
    seed: seed,
    disableGlobal: disableGlobal,
    dangerouslyUseGlobalCSS: true
  });
  return /*#__PURE__*/_react.default.createElement(_styles.StylesProvider, {
    generateClassName: generateClassName
  }, /*#__PURE__*/_react.default.createElement(_styles.ThemeProvider, {
    theme: pageTheme
  }, children));
};

ThemeProvider.propTypes = {
  /**
   * Theme to be used.
   */
  theme: _propTypes.default.string,

  /**
   * The string used to prefix the class names in production.
   *
   * @var {[type]}
   */
  productionPrefix: _propTypes.default.string,

  /**
   * To avoid classnames collisions.
   */
  seed: _propTypes.default.string,
  disableGlobal: _propTypes.default.bool
};
ThemeProvider.defaultProps = {
  theme: 'default',
  productionPrefix: 'jss',
  seed: '',
  disableGlobal: false
};
var _default = ThemeProvider;
exports.default = _default;