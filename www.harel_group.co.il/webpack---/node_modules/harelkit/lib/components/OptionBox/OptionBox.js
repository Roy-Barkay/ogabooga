"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _OptionBox = _interopRequireDefault(require("./OptionBox.style"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var noop = function noop() {};

var OptionBox = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var icon = props.icon,
      title = props.title,
      subtitle = props.subtitle,
      active = props.active,
      onClick = props.onClick,
      bo = props.bo,
      name = props.name;

  var handleBoxClick = function handleBoxClick() {
    onClick(name);
  };

  return /*#__PURE__*/_react.default.createElement(_OptionBox.default.Root, null, /*#__PURE__*/_react.default.createElement(_OptionBox.default.Box, {
    active: active,
    onClick: handleBoxClick,
    "data-hrl-bo": bo ? "".concat(bo, "-optionbox}") : null
  }, icon, title && /*#__PURE__*/_react.default.createElement("p", null, title)), subtitle && /*#__PURE__*/_react.default.createElement("p", null, subtitle));
});
OptionBox.propTypes = {
  /**
   * Box icon
   */
  icon: _propTypes.default.element.isRequired,

  /**
   * Box title
   */
  title: _propTypes.default.string,

  /**
   * Box subtitle
   */
  subtitle: _propTypes.default.string,

  /**
   * If true, box will be highlighted
   */
  active: _propTypes.default.bool,

  /**
   * Used to identify option box in onClick callback
   */
  name: _propTypes.default.string,

  /**
   * Callback fired when box is clicked.
   * <strong>Signature:</strong>
   * function(name: string) => void
   * name: The name prop, if sent.
   */
  onClick: _propTypes.default.func,

  /**
   * Will add data-hrl-bo attribute to element
   * 
   * bo attribute:
   * ${bo}-optionbox
   */
  bo: _propTypes.default.string
};
OptionBox.defaultProps = {
  active: false,
  onClick: noop
};
var _default = OptionBox;
exports.default = _default;