"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _Option = _interopRequireDefault(require("./Option.style"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var Option = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var children = props.children,
      value = props.value,
      checked = props.checked,
      id = props.id,
      name = props.name,
      onChange = props.onChange,
      disabled = props.disabled,
      bo = props.bo,
      i = props.i;
  var boInput = bo ? "".concat(bo, "-toggle-input-").concat(i) : null;
  var boLabel = bo ? "".concat(bo, "-toggle-label-").concat(i) : null;
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_Option.default.Input, {
    type: "radio",
    name: name,
    value: value,
    id: id,
    checked: checked,
    onChange: onChange,
    disabled: disabled,
    "data-hrl-bo": boInput,
    ref: ref
  }), /*#__PURE__*/_react.default.createElement(_Option.default.Label, {
    htmlFor: id,
    "data-hrl-bo": boLabel
  }, children));
});
Option.propTypes = {
  /**
   * Option value
   */
  value: _propTypes.default.string.isRequired,

  /**
   * Option id
   */
  id: _propTypes.default.string,

  /**
   * Option name
   */
  name: _propTypes.default.string,

  /**
   * If true, Option is disabled
   */
  disabled: _propTypes.default.bool
};
Option.defaultProps = {
  value: '',
  disabled: false
};
var _default = Option;
exports.default = _default;