"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Carousel = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactSlick = _interopRequireDefault(require("react-slick"));

require("slick-carousel/slick/slick.css");

require("slick-carousel/slick/slick-theme.css");

require("./Carousel.css");

var _printVersion = _interopRequireDefault(require("../../utils/printVersion"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var Carousel = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  (0, _react.useEffect)(function () {
    return (0, _printVersion.default)();
  }, []);
  return /*#__PURE__*/_react.default.createElement("div", {
    style: {
      position: 'relative',
      padding: 10
    },
    "data-hrl-bo": props.bo
  }, /*#__PURE__*/_react.default.createElement(_reactSlick.default, (0, _extends2.default)({}, props, {
    ref: ref
  }), props.children));
});
exports.Carousel = Carousel;
Carousel.propTypes = {
  /** Enable tabbing and arrow key navigation */
  accessibility: _propTypes.default.bool,

  /** Adjust the slide's height automatically */
  adaptiveHeight: _propTypes.default.bool,

  /** Index change callback. `index => ...` */
  afterChange: _propTypes.default.func,

  /** Index change callback. `(oldIndex, newIndex) => ...` */
  beforeChange: _propTypes.default.func,

  /** Display arrows */
  arrows: _propTypes.default.bool,

  /** Delay between each auto scroll (in milliseconds) */
  autoplaySpeed: _propTypes.default.number,

  /** Autoplay frames */
  autoplay: _propTypes.default.bool,

  /** Center current slide */
  centerMode: _propTypes.default.bool,

  /** Padding for center mode (when enabled) */
  centerPadding: _propTypes.default.string,

  /** Display dots */
  dots: _propTypes.default.bool,

  /** Enable scrollable via dragging on desktop */
  draggable: _propTypes.default.bool,

  /** Animation easting */
  easing: _propTypes.default.string,

  /** Allow fade animation */
  fade: _propTypes.default.bool,

  /** Infinitely wrap around contents */
  infinite: _propTypes.default.bool,

  /** Index of first slide */
  initialSlide: _propTypes.default.number,

  /** componentWillMount callback. `() => void` */
  onInit: _propTypes.default.func,

  /** Prevents autoplay while hovering on dots */
  pauseOnDotsHover: _propTypes.default.bool,

  /** Prevents autoplay while focused on slides */
  pauseOnFocus: _propTypes.default.bool,

  /** Prevents autoplay while hovering on track */
  pauseOnHover: _propTypes.default.bool,

  /** number of rows per slide in the slider, (enables grid mode) */
  rows: _propTypes.default.number,

  /** Reverses the slide order */
  rtl: _propTypes.default.bool,

  /** How many slides to scroll at once */
  slidesToScroll: _propTypes.default.number,

  /** Display as vertical carousel */
  vertical: _propTypes.default.bool,

  /**
   *    The content of the component.
   */
  children: _propTypes.default.node,
  bo: _propTypes.default.string
};
Carousel.defaultProps = {
  accessibility: true,
  adaptiveHeight: false,
  arrows: true,
  autoplaySpeed: 3000,
  autoplay: false,
  centerMode: false,
  centerPadding: '50px',
  dots: true,
  draggable: true,
  easing: 'linear',
  fade: false,
  infinite: true,
  initialSlide: 0,
  pauseOnDotsHover: false,
  pauseOnFocus: false,
  pauseOnHover: true,
  rows: 1,
  rtl: true,
  vertical: false,
  bo: 'carousel'
};
var _default = Carousel;
exports.default = _default;