"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _Drawer = _interopRequireDefault(require("@material-ui/core/Drawer"));

var _clsx2 = _interopRequireDefault(require("clsx"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Drawer2 = _interopRequireDefault(require("./Drawer.style"));

var _Header = _interopRequireDefault(require("./Header"));

var noop = function noop() {};

function Drawer(props) {
  var children = props.children,
      open = props.open,
      setOpen = props.setOpen,
      title = props.title,
      subtitle = props.subtitle,
      showClose = props.showClose,
      width = props.width,
      onClose = props.onClose;
  var classes = (0, _Drawer2.default)();

  var toggleDrawer = function toggleDrawer(event) {
    if (event.type === 'keydown' && event.key === 'Escape') {
      closeDrawer();
    }
  };

  var closeDrawer = function closeDrawer() {
    if (open) {
      setOpen(false);
      onClose();
    }
  };

  return /*#__PURE__*/_react.default.createElement(_Drawer.default, {
    anchor: "right",
    elevation: 10,
    open: open,
    onClose: toggleDrawer,
    variant: "temporary",
    ModalProps: {
      onBackdropClick: closeDrawer
    }
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _clsx2.default)(classes.container, classes[width]),
    role: "presentation"
  }, /*#__PURE__*/_react.default.createElement(_Header.default, {
    title: title,
    subtitle: subtitle,
    showClose: showClose,
    setClose: closeDrawer
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _clsx2.default)((0, _defineProperty2.default)({}, classes.hasClose, showClose))
  }, children)));
}

Drawer.propTypes = {
  /**
   * Whether the drawer is open or not
   */
  open: _propTypes.default.bool.isRequired,

  /**
   * Function handling drawer closing, needed for closing the drawer from within the drawer itself
   */
  setOpen: _propTypes.default.func.isRequired,

  /**
   * Whether to show close button or not
   */
  showClose: _propTypes.default.bool,

  /**
   * Drawer title
   */
  title: _propTypes.default.node,

  /**
   * Drawer subtitle
   */
  subtitle: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),

  /**
   * drawer width
   */
  width: _propTypes.default.oneOf(['small', 'medium', 'large', 'full']),

  /**
   * Callback fired when the component requests to be closed
   */
  onClose: _propTypes.default.func,

  /** The content of the component*/
  children: _propTypes.default.node,

  /**
   * Drawer variant
   */
  variant: 'permanent' | 'persistent' | 'temporary'
};
Drawer.defaultProps = {
  showClose: false,
  width: 'medium',
  onClose: noop,
  variant: 'temporary'
};
var _default = Drawer;
exports.default = _default;