"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Step = _interopRequireDefault(require("./Step"));

var _Stepper = _interopRequireDefault(require("./Stepper.style"));

var _utils = require("../../utils");

var _printVersion = _interopRequireDefault(require("../../utils/printVersion"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Stepper(props) {
  (0, _react.useEffect)(function () {
    return (0, _printVersion.default)();
  }, []);
  var classes = (0, _Stepper.default)();
  var steps = props.steps,
      activeStep = props.activeStep,
      isClickable = props.isClickable,
      isClickableOnlyDoneStep = props.isClickableOnlyDoneStep,
      children = props.children;
  var stepList = (0, _utils.isChildrenNil)(children) ? steps.map(function (step, index) {
    return /*#__PURE__*/_react.default.createElement(_Step.default, {
      key: step.title || step,
      active: activeStep === index,
      done: activeStep > index,
      title: step.title || step,
      icon: step.icon,
      onClick: step.onClick,
      route: step.route,
      isClickable: isClickable,
      disabled: step.disabled,
      isClickableOnlyDoneStep: isClickableOnlyDoneStep,
      "data-hrl-bo": "atm-step"
    });
  }) : _react.Children.map(children, function (child, index) {
    if (child.type === _Step.default) {
      return /*#__PURE__*/(0, _react.cloneElement)(child, {
        key: child.props.title || step,
        active: activeStep === index,
        done: activeStep > index,
        title: child.props.title || step,
        icon: child.props.icon,
        onClick: child.props.onClick,
        isClickable: isClickable,
        isClickableOnlyDoneStep: isClickableOnlyDoneStep,
        route: child.props.route,
        disabled: child.props.disabled,
        'data-hrl-bo': "atm-step-".concat(index)
      });
    }
  });

  var getActiveNameAndCountChildren = function getActiveNameAndCountChildren(children) {
    var steps = children.filter(function (child) {
      return child.type === _Step.default;
    });
    return {
      title: steps[activeStep].props.title,
      count: steps.length
    };
  };

  var activeTitle = (0, _utils.isChildrenNil)(children) ? steps[activeStep].title : getActiveNameAndCountChildren(children).title;
  var countSteps = (0, _utils.isChildrenNil)(children) ? steps.length : getActiveNameAndCountChildren(children).count;
  return /*#__PURE__*/_react.default.createElement("ul", {
    className: classes.root,
    role: "radiogroup",
    tabIndex: "0",
    "aria-valuemin": "1",
    "aria-valuemax": countSteps,
    "aria-valuenow": activeStep,
    "aria-valuetext": "Step ".concat(activeStep, " of ").concat(countSteps, ": ").concat(activeTitle)
  }, stepList);
}

Stepper.Step = _Step.default;
Stepper.propTypes = {
  /**
   * Set the active step (zero based index)
   */
  activeStep: _propTypes.default.number,

  /**
   * Disable click in active step
   */
  isClickable: _propTypes.default.bool,

  /**
   * Steps in stepper. if children exists it will override Steps
   */
  steps: _propTypes.default.arrayOf(_propTypes.default.shape({
    title: _propTypes.default.string,
    icon: _propTypes.default.any,
    disabled: _propTypes.default.bool
  })),

  /**
   * Only Done Step is clickable
   */
  isClickableOnlyDoneStep: _propTypes.default.bool,

  /**
   *    The content of the component.
   */
  children: _propTypes.default.node
};
Stepper.defaultProps = {
  activeStep: 0,
  steps: [],
  isClickable: true,
  isClickableOnlyDoneStep: false
};
var _default = Stepper;
exports.default = _default;