"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = require("react");

var _formik = require("formik");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _scrollToElement = _interopRequireDefault(require("scroll-to-element"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

// Based on this gist: https://gist.github.com/dphrag/4db3b453e02567a0bb52592679554a5b
var ErrorFocus = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(ErrorFocus, _Component);

  var _super = _createSuper(ErrorFocus);

  function ErrorFocus() {
    var _this;

    (0, _classCallCheck2.default)(this, ErrorFocus);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getFirstElementErrors", function (errors, firstElement) {
      var fE = errors[firstElement];

      if ((0, _typeof2.default)(fE) === 'object' && !Array.isArray(fE)) {
        var keysLayerOne = Object.keys(fE);
        return "".concat(firstElement, "-").concat(keysLayerOne[0]);
      }

      if ((0, _typeof2.default)(fE) === 'object' && Array.isArray(fE)) {
        for (var i = 0; i < fE.length; i++) {
          if (fE[i]) {
            var elements = Object.keys(fE[i]);
            return "".concat(firstElement, "[").concat(i, "].").concat(elements[0]);
          }
        }
      }

      return firstElement;
    });
    return _this;
  }

  (0, _createClass2.default)(ErrorFocus, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      // eslint-disable-next-line react/prop-types
      var _prevProps$formik = prevProps.formik,
          isSubmitting = _prevProps$formik.isSubmitting,
          isValidating = _prevProps$formik.isValidating,
          errors = _prevProps$formik.errors;
      var keys = Object.keys(errors);

      if (keys.length > 0 && isSubmitting && !isValidating) {
        var fk = keys[0];
        var getNameInputError = this.getFirstElementErrors(errors, fk);
        var selector = "input[id=\"".concat(getNameInputError, "\"]");
        var errorElement = document.querySelector(selector);

        if (errorElement) {
          var _this$props = this.props,
              offset = _this$props.offset,
              ease = _this$props.ease,
              duration = _this$props.duration,
              focusDelay = _this$props.focusDelay,
              align = _this$props.align;
          (0, _scrollToElement.default)(errorElement, {
            offset: offset,
            ease: ease,
            duration: duration,
            align: align
          });
          this.timeout = setTimeout(function () {
            return errorElement.focus();
          }, duration + focusDelay);
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.timeout) {
        clearTimeout(this.timeout);
      }
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);
  return ErrorFocus;
}(_react.Component);

(0, _defineProperty2.default)(ErrorFocus, "defaultProps", {
  offset: 0,
  align: 'top',
  focusDelay: 200,
  ease: 'linear',
  duration: 1000
});
ErrorFocus.propTypes = {
  // See scroll-to-element for configuration options: https://www.npmjs.com/package/scroll-to-element

  /**
   * Add an additional offset to the final position. if > 0 then page is moved to the bottom otherwise the page is moved to the top.
   */
  offset: _propTypes.default.number,

  /**
   */
  focusDelay: _propTypes.default.number,

  /**
   * Alignment of the element in the resulting viewport. Can be one of 'top', 'middle' or 'bottom'. Defaulting to 'top'.
   */
  align: _propTypes.default.string,

  /**
   * Easing function defaulting to "out-circ" (view ease for more)
   */
  ease: _propTypes.default.string,

  /**
   * Animation duration defaulting to 1000
   */
  duration: _propTypes.default.number
};

var _default = (0, _formik.connect)(ErrorFocus);

exports.default = _default;