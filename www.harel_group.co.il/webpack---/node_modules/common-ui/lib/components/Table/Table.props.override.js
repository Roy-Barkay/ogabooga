"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Add = _interopRequireDefault(require("@material-ui/icons/Add"));

var _Check = _interopRequireDefault(require("@material-ui/icons/Check"));

var _Search = _interopRequireDefault(require("@material-ui/icons/Search"));

var _Clear = _interopRequireDefault(require("@material-ui/icons/Clear"));

var _Edit = _interopRequireDefault(require("@material-ui/icons/Edit"));

var _SaveAlt = _interopRequireDefault(require("@material-ui/icons/SaveAlt"));

var _FirstPage = _interopRequireDefault(require("@material-ui/icons/FirstPage"));

var _LastPage = _interopRequireDefault(require("@material-ui/icons/LastPage"));

var _ChevronRight = _interopRequireDefault(require("@material-ui/icons/ChevronRight"));

var _ChevronLeft = _interopRequireDefault(require("@material-ui/icons/ChevronLeft"));

var _ArrowUpward = _interopRequireDefault(require("@material-ui/icons/ArrowUpward"));

var _DeleteOutlined = _interopRequireDefault(require("@material-ui/icons/DeleteOutlined"));

var _Remove = _interopRequireDefault(require("@material-ui/icons/Remove"));

var _ViewColumn = _interopRequireDefault(require("@material-ui/icons/ViewColumn"));

var _FilterList = _interopRequireDefault(require("@material-ui/icons/FilterList"));

/** Icons */
var _default = function _default(props) {
  return {
    icons: {
      Add: _Add.default,
      Check: _Check.default,
      Search: _Search.default,
      Clear: _Clear.default,
      Filter: _FilterList.default,
      Delete: _DeleteOutlined.default,
      Edit: _Edit.default,
      Export: _SaveAlt.default,
      FirstPage: _FirstPage.default,
      LastPage: _LastPage.default,
      NextPage: _ChevronRight.default,
      PreviousPage: _ChevronLeft.default,
      ResetSearch: _Clear.default,
      SortArrow: _ArrowUpward.default,
      DetailPanel: _ChevronRight.default,
      ThirdStateCheck: _Remove.default,
      ViewColumn: _ViewColumn.default
    },
    localization: {
      body: {
        emptyDataSourceMessage: 'אין רשומות להצגה',
        addTooltip: 'הוסף',
        deleteTooltip: 'מחק',
        editTooltip: 'ערוך',
        filterRow: {
          filterTooltip: 'סינון'
        },
        editRow: {
          deleteText: 'האם אתה בטוח שברצונך למחוק את השורה?',
          cancelTooltip: 'בטל',
          saveTooltip: 'שמור'
        }
      },
      grouping: {
        placeholder: 'גרור את ראשי הטבלאות'
      },
      header: {
        actions: 'פעולות'
      },
      pagination: {
        labelDisplayedRows: '{from}-{to} מתוך {count}',
        labelRowsSelect: 'שורות',
        labelRowsPerPage: 'שורות לעמוד:',
        firstAriaLabel: 'עמוד ראשון',
        firstTooltip: 'עמוד ראשון',
        previousAriaLabel: 'העמוד הקודם',
        previousTooltip: 'העמוד הקודם',
        nextAriaLabel: 'העמוד הבא',
        nextTooltip: 'העמוד הבא',
        lastAriaLabel: 'עמוד אחרון',
        lastTooltip: 'עמוד אחרון'
      },
      toolbar: {
        addRemoveColumns: 'הוסף או הסר עמודות',
        nRowsSelected: '{0} שורות נבחרו',
        showColumnsTitle: 'הראה עמודות',
        showColumnsAriaLabel: 'הראה עמודות',
        exportTitle: 'ייצא',
        exportAriaLabel: 'ייצא',
        exportName: 'ייצא לקובץ CSV',
        searchTooltip: 'חיפוש',
        searchPlaceholder: 'חיפוש'
      }
    },
    options: {
      search: props.allowSearch,
      sorting: props.allowSorting,
      filtering: props.allowFiltering,
      grouping: props.allowGrouping,
      exportButton: props.allowExport,
      exportAllData: props.exportAllData,
      paging: props.allowPaging,
      header: props.showHeader,
      showTitle: props.showTitle,
      columnsButton: props.showColumnFilterButton,
      emptyRowsWhenPaging: props.renderEmptyFillSpace,
      showSelectAllCheckbox: props.showSelectAllCheckbox,
      selection: props.allowSelection,
      toolbar: props.showToolbar,
      pageSize: props.pageSizeOptions.length ? props.pageSizeOptions[0] : 5,
      paginationType: 'normal',
      pageSizeOptions: props.pageSizeOptions
    }
  };
};

exports.default = _default;