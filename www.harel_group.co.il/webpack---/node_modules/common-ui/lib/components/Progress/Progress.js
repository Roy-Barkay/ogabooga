"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _CircularProgress = _interopRequireDefault(require("@material-ui/core/CircularProgress"));

var _utils = require("../../utils");

var _printVersion = _interopRequireDefault(require("../../utils/printVersion"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Progress(props) {
  (0, _react.useEffect)(function () {
    return (0, _printVersion.default)();
  }, []);
  var progressProps = (0, _utils.pick)(['color', 'size', 'thickness', 'value', 'variant', 'className'], props);
  return /*#__PURE__*/_react.default.createElement(_CircularProgress.default, (0, _extends2.default)({}, progressProps, {
    role: 'alert',
    "data-hrl-bo": props.bo,
    "aria-label": props.ariaLable ? props.ariaLable : null
  }));
}

Progress.propTypes = {
  /**    The color of the component. It supports those theme colors that make sense for this component */
  color: _propTypes.default.oneOf(['primary', 'secondary']),

  /** The size of the circle. If using a number, the pixel unit is assumed. If using a string, you need to provide the CSS unit, e.g '3rem' */
  size: _propTypes.default.number,

  /** The thickness of the circle */
  thickness: _propTypes.default.number,

  /** The value of the progress indicator for the determinate and static variants. Value between 0 and 100 */
  value: _propTypes.default.number,

  /** The variant to use. Use indeterminate when there is no progress value */
  variant: _propTypes.default.oneOf(['determinate', 'indeterminate', 'static']),

  /** Add custom aria-label, ariaLable default is null */
  ariaLable: _propTypes.default.oneOf([_propTypes.default.string, null]),

  /** Add bo for QA */
  bo: _propTypes.default.string
};
Progress.defaultProps = {
  color: 'primary',
  variant: 'indeterminate',
  ariaLable: null,
  bo: 'data-hrl-bo-Progress'
};
var _default = Progress;
exports.default = _default;