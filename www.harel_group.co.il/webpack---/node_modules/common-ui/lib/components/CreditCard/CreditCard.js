"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _moment = _interopRequireDefault(require("moment"));

var _lodash = require("lodash");

var _Grid = _interopRequireDefault(require("../Grid"));

var _TextField = _interopRequireDefault(require("../TextField"));

var _IDInput = _interopRequireDefault(require("../IDInput"));

var _CreditCardField = _interopRequireDefault(require("../CreditCardField"));

var _useReduxField = _interopRequireWildcard(require("../HOC/useReduxField"));

var _misc = require("../../utils/misc");

var _usePrevious = _interopRequireDefault(require("../../utils/usePrevious"));

var _Autocomplete = _interopRequireDefault(require("../Autocomplete"));

var _printVersion = _interopRequireDefault(require("../../utils/printVersion"));

var _excluded = ["onChange", "onBlur", "validateOnChange", "validateOnBlur", "value", "name", "isSubmitting", "grid", "spacing", "required", "useRedux", "cardNumberHasSpace"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var CreditCardInner = function CreditCardInner(_ref) {
  var _restProps$childProps, _restProps$childProps2, _restProps$childProps3, _restProps$childProps4, _restProps$childProps5, _restProps$childProps6, _restProps$childProps7, _restProps$childProps8;

  var onChange = _ref.onChange,
      onBlur = _ref.onBlur,
      validateOnChange = _ref.validateOnChange,
      validateOnBlur = _ref.validateOnBlur,
      value = _ref.value,
      name = _ref.name,
      isSubmitting = _ref.isSubmitting,
      grid = _ref.grid,
      spacing = _ref.spacing,
      required = _ref.required,
      useRedux = _ref.useRedux,
      cardNumberHasSpace = _ref.cardNumberHasSpace,
      restProps = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  (0, _react.useEffect)(function () {
    return (0, _printVersion.default)();
  }, []);
  var FIELDS = {
    CLIENT_ID: 'clientId',
    CLIENT_NAME: 'clientName',
    CLIENT_FIRST_NAME: 'clientFirstName',
    CLIENT_LAST_NAME: 'clientLastName',
    CARD_NUMBER: 'cardNumber',
    MONTH: 'month',
    YEAR: 'year',
    CVV: 'cvv'
  };
  var form = useRedux({
    clientId: value.clientId,
    clientName: value.clientName,
    clientFirstName: value.clientFirstName,
    clientLastName: value.clientFirstName,
    cardNumber: value.cardNumber,
    month: value.month,
    year: value.year,
    cvv: value.cvv
  });
  var getFieldProps = form.getFieldProps,
      handleChange = form.handleChange,
      values = form.values;
  var clientId = values.clientId,
      clientName = values.clientName,
      clientFirstName = values.clientFirstName,
      clientLastName = values.clientLastName,
      cardNumber = values.cardNumber,
      month = values.month,
      year = values.year,
      cvv = values.cvv;
  var fieldName = name;
  var prevValues = (0, _usePrevious.default)({
    value: value
  });

  var getYearOptions = function getYearOptions() {
    var currentYear = (0, _moment.default)().year();
    return (0, _lodash.range)(currentYear, currentYear + 11);
  };

  var yearOptions = getYearOptions();
  var monthOptions = (0, _lodash.range)(1, 13);
  var dataHrlBo = restProps['data-hrl-bo'];
  var id = restProps['id'];
  (0, _react.useEffect)(function () {
    if (prevValues && (0, _lodash.isEqual)(prevValues === null || prevValues === void 0 ? void 0 : prevValues.value, value)) {
      return;
    }

    handleChange('clientId')((0, _misc.getEventData)(fieldName, value.clientId));
    handleChange('clientName')((0, _misc.getEventData)(fieldName, value.clientName));
    handleChange('clientFirstName')((0, _misc.getEventData)(fieldName, value.clientFirstName));
    handleChange('clientLastName')((0, _misc.getEventData)(fieldName, value.clientLastName));
    handleChange('cardNumber')((0, _misc.getEventData)(fieldName, value.cardNumber));
    handleChange('month')((0, _misc.getEventData)(fieldName, value.month));
    handleChange('year')((0, _misc.getEventData)(fieldName, value.year));
    handleChange('cvv')((0, _misc.getEventData)(fieldName, value.cvv));
  }, [value]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_Grid.default, {
    container: true,
    spacing: spacing
  }, restProps.seperateName ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_Grid.default, (0, _extends2.default)({
    item: true
  }, grid.clientFirstName), /*#__PURE__*/_react.default.createElement(_TextField.default, (0, _extends2.default)({}, getFieldProps(FIELDS.CLIENT_FIRST_NAME), {
    label: "\u05E9\u05DD \u05E4\u05E8\u05D8\u05D9",
    "data-hrl-bo": "".concat(dataHrlBo, "-clientFirstName"),
    id: "".concat(id, "-clientFirstName"),
    value: clientFirstName
  }, (_restProps$childProps = restProps.childProps) === null || _restProps$childProps === void 0 ? void 0 : _restProps$childProps.clientFirstName))), /*#__PURE__*/_react.default.createElement(_Grid.default, (0, _extends2.default)({
    item: true
  }, grid.clientLastName), /*#__PURE__*/_react.default.createElement(_TextField.default, (0, _extends2.default)({}, getFieldProps(FIELDS.CLIENT_LAST_NAME), {
    label: "\u05E9\u05DD \u05DE\u05E9\u05E4\u05D7\u05D4",
    "data-hrl-bo": "".concat(dataHrlBo, "-clientLastName"),
    id: "".concat(id, "-clientLastName"),
    value: clientLastName
  }, (_restProps$childProps2 = restProps.childProps) === null || _restProps$childProps2 === void 0 ? void 0 : _restProps$childProps2.clientLastName)))) : /*#__PURE__*/_react.default.createElement(_Grid.default, (0, _extends2.default)({
    item: true
  }, grid.clientName), /*#__PURE__*/_react.default.createElement(_TextField.default, (0, _extends2.default)({}, getFieldProps(FIELDS.CLIENT_NAME), {
    label: "\u05E9\u05DD \u05DE\u05DC\u05D0 \u05E9\u05DC \u05D1\u05E2\u05DC \u05D4\u05DB\u05E8\u05D8\u05D9\u05E1",
    "data-hrl-bo": "".concat(dataHrlBo, "-clientName"),
    id: "".concat(id, "-clientName"),
    value: clientName
  }, (_restProps$childProps3 = restProps.childProps) === null || _restProps$childProps3 === void 0 ? void 0 : _restProps$childProps3.clientName))), /*#__PURE__*/_react.default.createElement(_Grid.default, (0, _extends2.default)({
    item: true
  }, grid.clientId), /*#__PURE__*/_react.default.createElement(_IDInput.default, (0, _extends2.default)({}, getFieldProps(FIELDS.CLIENT_ID), {
    label: "\u05EA\u05E2\u05D5\u05D3\u05EA \u05D6\u05D4\u05D5\u05EA \u05D1\u05E2\u05DC \u05D4\u05DB\u05E8\u05D8\u05D9\u05E1",
    "data-hrl-bo": "".concat(dataHrlBo, "-clientId"),
    id: "".concat(id, "-clientId"),
    value: clientId,
    directionLtr: true
  }, (_restProps$childProps4 = restProps.childProps) === null || _restProps$childProps4 === void 0 ? void 0 : _restProps$childProps4.clientId))), /*#__PURE__*/_react.default.createElement(_Grid.default, (0, _extends2.default)({
    item: true
  }, grid.cardNumber), /*#__PURE__*/_react.default.createElement(_CreditCardField.default, (0, _extends2.default)({}, getFieldProps(FIELDS.CARD_NUMBER), {
    label: "\u05DE\u05E1\u05E4\u05E8 \u05D4\u05DB\u05E8\u05D8\u05D9\u05E1",
    "data-hrl-bo": "".concat(dataHrlBo, "-cardNumber"),
    id: "".concat(id, "-cardNumber"),
    value: cardNumber,
    pattern: "[0-9]*",
    inputmode: "numeric",
    hasSpaces: cardNumberHasSpace
  }, (_restProps$childProps5 = restProps.childProps) === null || _restProps$childProps5 === void 0 ? void 0 : _restProps$childProps5.cardNumber))), /*#__PURE__*/_react.default.createElement(_Grid.default, (0, _extends2.default)({
    item: true
  }, grid.month), /*#__PURE__*/_react.default.createElement(_Autocomplete.default, (0, _extends2.default)({}, getFieldProps(FIELDS.MONTH), {
    label: "\u05D7\u05D5\u05D3\u05E9",
    id: "".concat(id, "-month"),
    "data-hrl-bo": "".concat(dataHrlBo, "-month"),
    options: monthOptions.map(function (option) {
      return {
        label: option.toString(),
        value: option.toString()
      };
    }),
    defaultValue: '',
    displayEmpty: true,
    getOptionSelected: function getOptionSelected(option, value) {
      return option.value === value;
    },
    onChange: function onChange(e) {
      handleChange(FIELDS.MONTH)((0, _misc.getEventData)(fieldName, e.target.value));
    },
    value: month
  }, (_restProps$childProps6 = restProps.childProps) === null || _restProps$childProps6 === void 0 ? void 0 : _restProps$childProps6.month))), /*#__PURE__*/_react.default.createElement(_Grid.default, (0, _extends2.default)({
    item: true
  }, grid.year), /*#__PURE__*/_react.default.createElement(_Autocomplete.default, (0, _extends2.default)({}, getFieldProps(FIELDS.YEAR), {
    label: "\u05E9\u05E0\u05D4",
    id: "".concat(id, "-year"),
    "data-hrl-bo": "".concat(dataHrlBo, "-year"),
    options: yearOptions.map(function (option) {
      return {
        label: option.toString(),
        value: option.toString()
      };
    }),
    defaultValue: '',
    displayEmpty: true,
    getOptionSelected: function getOptionSelected(option, value) {
      return option.value === value;
    },
    onChange: function onChange(e) {
      handleChange(FIELDS.YEAR)((0, _misc.getEventData)(fieldName, e.target.value));
    },
    value: year
  }, (_restProps$childProps7 = restProps.childProps) === null || _restProps$childProps7 === void 0 ? void 0 : _restProps$childProps7.year))), /*#__PURE__*/_react.default.createElement(_Grid.default, (0, _extends2.default)({
    item: true
  }, grid.cvv), /*#__PURE__*/_react.default.createElement(_TextField.default, (0, _extends2.default)({}, getFieldProps(FIELDS.CVV), {
    label: "CVV",
    "data-hrl-bo": "".concat(dataHrlBo, "-cvv"),
    id: "".concat(id, "-cvv"),
    value: cvv,
    mask: "9999",
    type: "tel",
    inputProps: {
      maxLength: 4
    }
  }, (_restProps$childProps8 = restProps.childProps) === null || _restProps$childProps8 === void 0 ? void 0 : _restProps$childProps8.cvv)))));
};

var sizesStruct = _propTypes.default.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, true]);

var singleObjectSizeStruct = _propTypes.default.shape({
  xs: sizesStruct,
  md: sizesStruct,
  lg: sizesStruct,
  xl: sizesStruct
});

var propTypes = {
  /**
   * Separate first and last name instead of one input
   */
  seperateName: _propTypes.default.bool,

  /**
   * Custom props
   */
  childProps: _propTypes.default.shape({
    clientId: _propTypes.default.object,
    clientName: _propTypes.default.object,
    clientFirstName: _propTypes.default.object,
    clientLastName: _propTypes.default.object,
    cardNumber: _propTypes.default.object,
    month: _propTypes.default.object,
    year: _propTypes.default.object,
    cvv: _propTypes.default.object
  }),

  /** Callback fired when the value is changed. */
  onChange: _propTypes.default.func,

  /**
   * Function to be called when input was blur
   */
  onBlur: _propTypes.default.func,

  /** Name attribute of the input element. */
  name: _propTypes.default.string,

  /** If true, the label is displayed as required and the input element` will be required. */
  required: _propTypes.default.shape({
    clientId: _propTypes.default.bool,
    clientName: _propTypes.default.bool,
    clientFirstName: _propTypes.default.bool,
    clientLastName: _propTypes.default.bool,
    cardNumber: _propTypes.default.bool,
    month: _propTypes.default.bool,
    year: _propTypes.default.bool,
    cvv: _propTypes.default.bool
  }),

  /**    The helper text content. */
  helperText: _propTypes.default.shape({
    clientId: _propTypes.default.string,
    clientName: _propTypes.default.string,
    clientFirstName: _propTypes.default.string,
    clientLastName: _propTypes.default.string,
    cardNumber: _propTypes.default.string,
    month: _propTypes.default.string,
    year: _propTypes.default.string,
    cvv: _propTypes.default.string
  }),

  /** If true, the label will be displayed in an error state. */
  error: _propTypes.default.shape({
    clientId: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
    clientName: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
    clientFirstName: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
    clientLastName: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
    cardNumber: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
    month: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
    year: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
    cvv: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string])
  }),

  /** The value of the input element, required for a controlled component. */
  value: _propTypes.default.shape({
    clientId: _propTypes.default.string,
    clientName: _propTypes.default.string,
    clientFirstName: _propTypes.default.string,
    clientLastName: _propTypes.default.string,
    cardNumber: _propTypes.default.string,
    month: _propTypes.default.string,
    year: _propTypes.default.string,
    cvv: _propTypes.default.string
  }),

  /** The grid container spacing */
  spacing: _propTypes.default.number,
  validateOnChange: _propTypes.default.bool,
  validateOnBlur: _propTypes.default.bool,

  /** The grid items sizing */
  grid: _propTypes.default.shape({
    clientId: singleObjectSizeStruct,
    clientName: singleObjectSizeStruct,
    clientFirstName: singleObjectSizeStruct,
    clientLastName: singleObjectSizeStruct,
    cardNumber: singleObjectSizeStruct,
    month: singleObjectSizeStruct,
    year: singleObjectSizeStruct,
    cvv: singleObjectSizeStruct
  }),
  'data-hrl-bo': _propTypes.default.string,

  /** Add spacing to card number */
  cardNumberHasSpace: _propTypes.default.bool
};
var defaultProps = {
  onChange: function onChange(e) {},
  onBlur: function onBlur(e) {},
  name: 'creditCard',
  seperateName: false,
  spacing: 2,
  'data-hrl-bo': 'creditCard',
  validateOnChange: true,
  validateOnBlur: false,
  value: {
    clientId: '',
    clientName: '',
    clientFirstName: '',
    clientLastName: '',
    cardNumber: '',
    year: '',
    month: '',
    cvv: ''
  },
  grid: {
    clientId: {
      xs: 12
    },
    clientName: {
      xs: 12
    },
    clientFirstName: {
      xs: 6
    },
    clientLastName: {
      xs: 6
    },
    cardNumber: {
      xs: 12
    },
    year: {
      xs: 6
    },
    month: {
      xs: 6
    },
    cvv: {
      xs: 12
    }
  },
  cardNumberHasSpace: false
};
CreditCardInner.propTypes = _objectSpread(_objectSpread({}, propTypes), _useReduxField.propTypes);
CreditCardInner.defaultProps = _objectSpread({}, defaultProps);

var CreditCard = function CreditCard(props) {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, (0, _useReduxField.default)(CreditCardInner)(props));
};

CreditCard.propTypes = _objectSpread(_objectSpread({}, propTypes), _useReduxField.propTypes);
CreditCard.defaultProps = _objectSpread({}, defaultProps);
CreditCard.displayName = 'CreditCard';
var _default = CreditCard;
exports.default = _default;