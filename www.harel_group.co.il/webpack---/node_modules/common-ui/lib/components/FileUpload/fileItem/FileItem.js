"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Progress = _interopRequireDefault(require("../progress/Progress"));

var _styled = _interopRequireDefault(require("./styled"));

var _reactSelect = _interopRequireDefault(require("react-select"));

var _FileItem = _interopRequireDefault(require("./FileItem.style"));

var _FileSpecificationPropTypes = require("../fileSpecification/FileSpecificationPropTypes");

var _constants = require("../constants/constants");

var _commonIcons = require("common-icons");

var _withStyles = _interopRequireDefault(require("@material-ui/core/styles/withStyles"));

var _IconButton = _interopRequireDefault(require("@material-ui/core/IconButton/IconButton"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var FileItem = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(FileItem, _Component);

  var _super = _createSuper(FileItem);

  function FileItem(props) {
    var _this;

    (0, _classCallCheck2.default)(this, FileItem);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "isDisabled", function () {
      return _this.props.isDisabled ? {
        label: _this.props.selectedOption.fileTypeName,
        value: _this.props.selectedOption.uniqueKey
      } : _this.props.selectedOption;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleNoOptionLeftOnDropdown", function () {
      _this.lastOptionChosen = true;
      return 'אין תוצאות';
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderFileSize", function () {
      var bytes = _this.props.size;
      if (bytes === 0) return '0 Bytes';
      var k = 1024;
      var sizes = ['Bytes', 'KB', 'MB'];
      var i = Math.floor(Math.log(bytes) / Math.log(k));
      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderIcon", function () {
      var IconName = _this.determineIcon();

      return /*#__PURE__*/_react.default.createElement(IconName, null);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "determineIcon", function () {
      var iconName = _constants.ICONS_MAP[_this.props.extension];
      return iconName ? iconName : _constants.ICONS_MAP.default;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "updateProgress", function (fileId) {
      if (!_this.props.hasError || _this.props.noTagsError) {
        _this.setState({
          isUpdateProgressReactivatedFlag: true
        });

        if (_this.props.progress === 100) {
          _this.setState({
            progress: 100
          }, function () {
            _this.props.setUiProgressCompleted(fileId);
          });

          return;
        }

        _this.intervalsIdsArr.push(setInterval(function () {
          _this.setState(function (prevState) {
            return {
              progress: prevState.progress + 1
            };
          }, function () {
            if (_this.state.progress === 100) {
              _this.props.setUiProgressCompleted(fileId);
            }
          });
        }, 10));
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderSelectAndOrError", function () {
      var _this$props = _this.props,
          hasError = _this$props.hasError,
          noTagsError = _this$props.noTagsError,
          hiddenFileType = _this$props.hiddenFileType;

      if (!hasError && _this.state.progress === 100) {
        return hiddenFileType ? null : _this.renderTagSelect();
      }

      if (noTagsError && _this.state.progress === 100) {
        return /*#__PURE__*/_react.default.createElement(_react.Fragment, null, hiddenFileType ? null : _this.renderTagSelect(noTagsError), _this.renderError());
      }

      return _this.renderError();
    });
    _this.selectRef = /*#__PURE__*/_react.default.createRef();
    _this.uploadTitleRef = /*#__PURE__*/_react.default.createRef();
    _this.lastOptionChosen = false;
    _this.intervalsIdsArr = [];
    _this.state = {
      progress: 0,
      cachedProgress: 0,
      isUpdateProgressReactivatedFlag: false
    };
    return _this;
  }

  (0, _createClass2.default)(FileItem, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateProgress(this.props.fileId);
      this.uploadTitleRef.current.focus();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.selectRef && this.selectRef.current && this.selectRef.current.select !== null && this.selectRef.current.select && this.lastOptionChosen) {
        this.lastOptionChosen = false;
        this.selectRef.current.select.blur();
      }

      if (this.state.progress >= 100 || this.props.hasError || this.state.progress === this.props.progress) {
        this.intervalsIdsArr.forEach(function (id) {
          clearInterval(id);
        });
      }

      if (this.props.progress <= 100 && !this.state.isUpdateProgressReactivatedFlag && this.state.progress <= 100) {
        this.updateProgress(this.props.fileId);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.intervalsIdsArr.forEach(function (id) {
        clearInterval(id);
      });
    }
  }, {
    key: "renderError",
    value: function renderError() {
      return /*#__PURE__*/_react.default.createElement("div", {
        id: "file-error-".concat(this.props.id),
        className: this.props.classes.error,
        role: "alert",
        "data-hrl-bo": "file-error-".concat(this.props.id)
      }, this.props.errorMessage);
    }
  }, {
    key: "renderTagSelect",
    value: function renderTagSelect(noTagsError) {
      var _this2 = this;

      return /*#__PURE__*/_react.default.createElement(_reactSelect.default, {
        name: "file-upload",
        placeholder: _constants.SELECT_PLACE_HOLDER,
        value: this.isDisabled(),
        isMulti: true,
        isSearchable: false,
        autoBlur: true,
        isDisabled: this.props.isDisabled,
        noOptionsMessage: this.handleNoOptionLeftOnDropdown,
        onChange: function onChange(args, action) {
          return _this2.handleTag(args, action);
        },
        closeMenuOnSelect: false,
        role: "combobox",
        options: this.props.types.map(function (type) {
          return _objectSpread(_objectSpread({}, type), {}, {
            value: type.uniqueKey,
            label: type.fileTypeName,
            role: 'listbox'
          });
        }),
        noTagsError: noTagsError,
        styles: _FileItem.default,
        ref: this.selectRef,
        "aria-label": _constants.SELECT_PLACE_HOLDER
      });
    }
  }, {
    key: "handleTag",
    value: function handleTag(selectedOption, _ref) {
      var action = _ref.action;
      this.props.onFileTypeSelect(selectedOption, this.props.fileId, action);
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      return /*#__PURE__*/_react.default.createElement("div", {
        className: this.props.classes.container
      }, /*#__PURE__*/_react.default.createElement("div", {
        className: this.props.classes.iconWrapper
      }, this.renderIcon()), /*#__PURE__*/_react.default.createElement("div", {
        className: this.props.classes.uploadInfo
      }, /*#__PURE__*/_react.default.createElement("div", {
        className: this.props.classes.uploadMeta
      }, /*#__PURE__*/_react.default.createElement("div", {
        className: this.props.classes.uploadTitle,
        ref: this.uploadTitleRef,
        tabIndex: "-1"
      }, /*#__PURE__*/_react.default.createElement("div", {
        className: this.props.classes.uploadFileName
      }, /*#__PURE__*/_react.default.createElement("span", {
        "data-hrl-bo": "file-name-".concat(this.props.id),
        className: this.props.classes.fileName
      }, this.props.name)), /*#__PURE__*/_react.default.createElement("div", {
        className: this.props.classes.uploadSize
      }, /*#__PURE__*/_react.default.createElement("span", {
        "data-hrl-bo": "file-size-".concat(this.props.id)
      }, this.renderFileSize()))), /*#__PURE__*/_react.default.createElement("div", {
        className: this.props.classes.uploadActions
      }, (this.state.progress === 100 || this.props.hasError) && /*#__PURE__*/_react.default.createElement(_IconButton.default, {
        "aria-label": "\u05DE\u05D7\u05E7 \u05E7\u05D5\u05D1\u05E5 ".concat(this.props.name),
        className: this.props.classes.deleteButton,
        onClick: function onClick() {
          return _this3.props.onDelete(_this3.props.types, _this3.props.id, _this3.props.fileId);
        }
      }, /*#__PURE__*/_react.default.createElement(_commonIcons.IconTrash, null)))), /*#__PURE__*/_react.default.createElement(_Progress.default, {
        id: "progress-".concat(this.props.id),
        step: this.state.progress,
        hasError: this.props.hasError
      }), /*#__PURE__*/_react.default.createElement("div", {
        className: "UploadData"
      }, this.renderSelectAndOrError())));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      return nextProps.progress !== prevState.cachedProgress ? {
        isUpdateProgressReactivatedFlag: false,
        cachedProgress: nextProps.progress
      } : null;
    }
  }]);
  return FileItem;
}(_react.Component);

var _default = (0, _withStyles.default)(_styled.default)(FileItem);

exports.default = _default;
FileItem.propTypes = {
  id: _propTypes.default.number,
  fileId: _propTypes.default.number.isRequired,
  name: _propTypes.default.string,
  size: _propTypes.default.number,
  hasError: _propTypes.default.bool,
  extension: _propTypes.default.string.isRequired,
  errorMessage: _propTypes.default.string,
  progress: _propTypes.default.number,
  types: _propTypes.default.arrayOf(_FileSpecificationPropTypes.FILE_SPECIFICATION_PROP_TYPE),
  isDisabled: _propTypes.default.bool,
  selectedOption: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),
  onFileTypeSelect: _propTypes.default.func,
  onDelete: _propTypes.default.func,
  'data-hrl-bo': _propTypes.default.string,
  setUiProgressCompleted: _propTypes.default.func,
  noTagsError: _propTypes.default.bool,
  hiddenFileType: _propTypes.default.bool,
  classes: _propTypes.default.any
};
FileItem.defaultProps = {
  id: 0,
  name: '',
  types: [],
  hasError: false,
  progress: 0
};