"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _core = require("@material-ui/core");

var _index = require("../../index");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _axios = _interopRequireDefault(require("axios"));

var _useReduxField = _interopRequireWildcard(require("../HOC/useReduxField"));

var _misc = require("../../utils/misc");

var _usePrevious = _interopRequireDefault(require("../../utils/usePrevious"));

var _useUpdateEffect = _interopRequireDefault(require("../../utils/useUpdateEffect"));

var _lodash = require("lodash");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var ExpandedAddress = function ExpandedAddress(props) {
  var _props$childProps, _props$childProps2, _props$childProps3, _props$childProps4, _props$childProps5, _props$childProps6, _props$childProps7;

  var baseUrl = props.baseUrl,
      value = props.value,
      grid = props.grid,
      spacing = props.spacing,
      name = props.name,
      onChange = props.onChange,
      useRedux = props.useRedux,
      proxy = props.proxy,
      onDataReceived = props.onDataReceived,
      allowZeroHouseNum = props.allowZeroHouseNum,
      sharedCities = props.sharedCities;
  var dataHrlBo = props['data-hrl-bo'];
  var fieldName = name;

  function useMemoState(defState) {
    var _React$useState = _react.default.useState(defState),
        _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
        state = _React$useState2[0],
        setState = _React$useState2[1];

    function smartSetState(newState) {
      if (!(0, _lodash.isEqual)(state, newState)) {
        setState(newState);
      }
    }

    return [state, smartSetState];
  }

  var _useMemoState = useMemoState([]),
      _useMemoState2 = (0, _slicedToArray2.default)(_useMemoState, 2),
      cities = _useMemoState2[0],
      setCities = _useMemoState2[1];

  var _useMemoState3 = useMemoState([]),
      _useMemoState4 = (0, _slicedToArray2.default)(_useMemoState3, 2),
      streets = _useMemoState4[0],
      setStreets = _useMemoState4[1];

  var _useMemoState5 = useMemoState([]),
      _useMemoState6 = (0, _slicedToArray2.default)(_useMemoState5, 2),
      houseNumbers = _useMemoState6[0],
      setHouseNumbers = _useMemoState6[1];

  var prevValues = (0, _usePrevious.default)({
    value: value
  });
  var form = useRedux({
    city: value.city,
    street: value.street,
    houseNumber: value.houseNumber,
    postalCode: value.postalCode,
    apartmentNumber: value.apartmentNumber,
    floorNumber: value.floorNumber,
    numberOfApartments: value.numberOfApartments
  });
  var getFieldProps = form.getFieldProps,
      handleChange = form.handleChange,
      values = form.values,
      errors = form.errors;
  var city = values.city,
      street = values.street,
      houseNumber = values.houseNumber,
      postalCode = values.postalCode,
      apartmentNumber = values.apartmentNumber,
      floorNumber = values.floorNumber,
      numberOfApartments = values.numberOfApartments;
  (0, _useUpdateEffect.default)(function () {
    if (prevValues && (0, _lodash.isEqual)(prevValues === null || prevValues === void 0 ? void 0 : prevValues.value, value)) {
      return;
    }

    handleChange('city')((0, _misc.getEventData)(fieldName, value.city));
    handleChange('street')((0, _misc.getEventData)(fieldName, value.street));
    handleChange('postalCode')((0, _misc.getEventData)(fieldName, value.postalCode));
    handleChange('houseNumber')((0, _misc.getEventData)(fieldName, getHouseNumberEventValue(value.houseNumber)));
    handleChange('apartmentNumber')((0, _misc.getEventData)(fieldName, value.apartmentNumber));
    handleChange('floorNumber')((0, _misc.getEventData)(fieldName, value.floorNumber));
    handleChange('numberOfApartments')((0, _misc.getEventData)(fieldName, value.numberOfApartments));
  }, [value]);
  (0, _react.useEffect)(function () {
    if (sharedCities) {
      setCities(citiesFormatter(sharedCities));
    } else {
      fetchData('city', pathUrls.cities(), citiesFormatter, setCities);
    }
  }, []);
  (0, _useUpdateEffect.default)(function () {
    props.onCitiesListChange(cities);
  }, [cities]);
  (0, _useUpdateEffect.default)(function () {
    props.onStreetsListChange(streets);
  }, [streets]);
  (0, _useUpdateEffect.default)(function () {
    props.onHouseNumbersListChange(houseNumbers);
  }, [houseNumbers]);
  (0, _useUpdateEffect.default)(function () {
    if (!!city) {
      fetchData('street', pathUrls.streets(city === null || city === void 0 ? void 0 : city.value), streetsFormatter, setStreets);
    }

    if (!city) {
      handleChange('street')((0, _misc.getEventData)(fieldName, ''));
      setStreets([]);
    }
  }, [city, cities]);
  (0, _useUpdateEffect.default)(function () {
    !!street && fetchData('houseNumber', pathUrls.houseNumbers(city === null || city === void 0 ? void 0 : city.value, street === null || street === void 0 ? void 0 : street.value), postalCodeFormatter, setHouseNumbers);

    if (!street) {
      handleChange('houseNumber')((0, _misc.getEventData)(fieldName, ''));
      setHouseNumbers([]);
    }
  }, [street, streets]);
  (0, _useUpdateEffect.default)(function () {
    !!houseNumber && !!houseNumber.value && handleChange('postalCode')((0, _misc.getEventData)(fieldName, houseNumber.value));
    !houseNumber && handleChange('postalCode')((0, _misc.getEventData)(fieldName, ''));
  }, [houseNumber]);
  var urlPrefix = baseUrl || 'https://digital.harel-group.co.il';
  var url = urlPrefix + '/static-data/address';

  if (proxy && proxy !== null) {
    url = proxy + url;
  }

  var pathUrls = {
    cities: function cities() {
      return "".concat(url, "/cities");
    },
    streets: function streets(cityCode) {
      return "".concat(url, "/streets/?cityCode=").concat(cityCode);
    },
    houseNumbers: function houseNumbers(cityCode, streetCode) {
      return "".concat(url, "/postal-codes/?cityCode=").concat(cityCode, "&streetCode=").concat(streetCode, "&nonzeroHouseNum=").concat(allowZeroHouseNum);
    }
  };

  var fetchData = function fetchData(type, url, formatter, setterFunc) {
    _axios.default.get(url).then(function (res) {
      if (!res.data) {
        res.data = [];
      }

      setterFunc(formatter(res.data));
      onDataReceived && onDataReceived({
        type: type,
        data: res.data
      });
    }).catch(function (e) {
      console.log(e);
    });
  };

  var citiesFormatter = function citiesFormatter(data) {
    return data.map(function (i) {
      return {
        label: trimStr(i.cityName),
        value: i.cityCode,
        postalCode: trimStr(i.postalCode7)
      };
    });
  };

  var streetsFormatter = function streetsFormatter(data) {
    return data.map(function (i) {
      return {
        label: trimStr(i.streetName),
        value: i.streetNumber
      };
    });
  };

  var postalCodeFormatter = function postalCodeFormatter(data) {
    return data.map(function (i) {
      return {
        label: i.entrance ? "".concat(trimStr(i.houseNumber)).concat(trimStr(i.entrance)) : trimStr(i.houseNumber),
        value: i.entrance ? "".concat(trimStr(i.houseNumber)).concat(trimStr(i.entrance)) : trimStr(i.houseNumber),
        postalCode: trimStr(i.postalCode7)
      };
    });
  };

  var cityChangeHandler = function cityChangeHandler(event, value, reason) {
    if (reason === 'blur' && city.value === value.value) {
      return;
    }

    switch (reason) {
      case 'clear':
        handleChange('city')((0, _misc.getEventData)(fieldName, ''));
        handleChange('street')((0, _misc.getEventData)(fieldName, ''));
        handleChange('houseNumber')((0, _misc.getEventData)(fieldName, ''));
        handleChange('postalCode')((0, _misc.getEventData)(fieldName, ''));
        handleChange('floorNumber')((0, _misc.getEventData)(fieldName, ''));
        handleChange('numberOfApartments')((0, _misc.getEventData)(fieldName, ''));
        handleChange('apartmentNumber')((0, _misc.getEventData)(fieldName, ''));
        break;

      case 'select-option':
      case 'blur':
        handleChange('city')((0, _misc.getEventData)(fieldName, value));
        handleChange('street')((0, _misc.getEventData)(fieldName, ''));
        handleChange('houseNumber')((0, _misc.getEventData)(fieldName, ''));
        handleChange('postalCode')((0, _misc.getEventData)(fieldName, ''));
        handleChange('floorNumber')((0, _misc.getEventData)(fieldName, ''));
        handleChange('numberOfApartments')((0, _misc.getEventData)(fieldName, ''));
        handleChange('apartmentNumber')((0, _misc.getEventData)(fieldName, ''));
        break;

      default:
        handleChange('city')((0, _misc.getEventData)(fieldName, value));
        break;
    }
  };

  var streetChangeHandler = function streetChangeHandler(event, value, reason) {
    switch (reason) {
      case 'clear':
        handleChange('street')((0, _misc.getEventData)(fieldName, ''));
        handleChange('houseNumber')((0, _misc.getEventData)(fieldName, ''));
        handleChange('postalCode')((0, _misc.getEventData)(fieldName, ''));
        handleChange('floorNumber')((0, _misc.getEventData)(fieldName, ''));
        handleChange('numberOfApartments')((0, _misc.getEventData)(fieldName, ''));
        handleChange('apartmentNumber')((0, _misc.getEventData)(fieldName, ''));
        break;

      case 'select-option':
        handleChange('street')((0, _misc.getEventData)(fieldName, value));
        handleChange('houseNumber')((0, _misc.getEventData)(fieldName, ''));
        handleChange('postalCode')((0, _misc.getEventData)(fieldName, ''));
        handleChange('floorNumber')((0, _misc.getEventData)(fieldName, ''));
        handleChange('numberOfApartments')((0, _misc.getEventData)(fieldName, ''));
        handleChange('apartmentNumber')((0, _misc.getEventData)(fieldName, ''));
        break;

      default:
        handleChange('street')((0, _misc.getEventData)(fieldName, value));
        break;
    }
  };

  var houseNumberChangeHandler = function houseNumberChangeHandler(event, value, reason) {
    if (reason === 'clear') {
      handleChange('houseNumber')((0, _misc.getEventData)(fieldName, ''));
      handleChange('postalCode')((0, _misc.getEventData)(fieldName, ''));
      handleChange('floorNumber')((0, _misc.getEventData)(fieldName, ''));
      handleChange('numberOfApartments')((0, _misc.getEventData)(fieldName, ''));
      handleChange('apartmentNumber')((0, _misc.getEventData)(fieldName, ''));
    } else {
      handleChange('houseNumber')((0, _misc.getEventData)(fieldName, getHouseNumberEventValue(value)));
    }
  };

  var trimStr = function trimStr(value) {
    return value || value === 0 ? value.toString().trim() : '';
  };

  var getHouseNumberEventValue = function getHouseNumberEventValue(houseNumber) {
    return (0, _misc.isObject)(houseNumber) ? {
      label: houseNumber.label,
      value: houseNumber.postalCode || houseNumber.value,
      actualValue: houseNumber.value || houseNumber.actualValue
    } : houseNumber;
  };

  return /*#__PURE__*/_react.default.createElement(_core.Grid, {
    container: true,
    spacing: spacing
  }, /*#__PURE__*/_react.default.createElement(_core.Grid, (0, _extends2.default)({
    item: true,
    xs: 12
  }, grid.city), /*#__PURE__*/_react.default.createElement(_index.Autocomplete, (0, _extends2.default)({
    label: "\u05E2\u05D9\u05E8 / \u05D9\u05E9\u05D5\u05D1"
  }, getFieldProps('city'), {
    options: cities,
    defaultValue: '',
    displayEmpty: true,
    value: city,
    getOptionSelected: function getOptionSelected(option, value) {
      var _value$value;

      return option.value.toString() === ((_value$value = value.value) === null || _value$value === void 0 ? void 0 : _value$value.toString());
    },
    getOptionLabel: function getOptionLabel(option) {
      return option.label;
    },
    onChange: cityChangeHandler,
    "data-hrl-bo": "".concat(dataHrlBo, "-city"),
    autoSelect: true,
    autoHighlight: true,
    isMatchFromStart: props.isFilterByStartWith
  }, (_props$childProps = props.childProps) === null || _props$childProps === void 0 ? void 0 : _props$childProps.city))), /*#__PURE__*/_react.default.createElement(_core.Grid, (0, _extends2.default)({
    item: true,
    xs: 12
  }, grid.street), /*#__PURE__*/_react.default.createElement(_index.Autocomplete, (0, _extends2.default)({
    label: "\u05E8\u05D7\u05D5\u05D1"
  }, getFieldProps('street'), {
    options: streets,
    value: street,
    getOptionSelected: function getOptionSelected(option, value) {
      var _value$value2;

      return option.value.toString() === ((_value$value2 = value.value) === null || _value$value2 === void 0 ? void 0 : _value$value2.toString());
    },
    defaultValue: '',
    displayEmpty: true,
    onChange: streetChangeHandler,
    "data-hrl-bo": "".concat(dataHrlBo, "-street"),
    autoSelect: true,
    autoHighlight: true,
    isMatchFromStart: props.isFilterByStartWith
  }, (_props$childProps2 = props.childProps) === null || _props$childProps2 === void 0 ? void 0 : _props$childProps2.street))), /*#__PURE__*/_react.default.createElement(_core.Grid, (0, _extends2.default)({
    item: true,
    xs: 12
  }, grid.houseNumber), /*#__PURE__*/_react.default.createElement(_index.Autocomplete, (0, _extends2.default)({
    label: "\u05DE\u05E1\u05E4\u05E8 \u05D1\u05D9\u05EA"
  }, getFieldProps('houseNumber'), {
    options: houseNumbers,
    value: houseNumber,
    getOptionSelected: function getOptionSelected(option, value) {
      var _value$value3;

      return option.value.toString() === ((_value$value3 = value.value) === null || _value$value3 === void 0 ? void 0 : _value$value3.toString());
    },
    defaultValue: '',
    displayEmpty: true,
    onChange: houseNumberChangeHandler,
    "data-hrl-bo": "".concat(dataHrlBo, "-houseNumber"),
    autoSelect: true,
    autoHighlight: true
  }, (_props$childProps3 = props.childProps) === null || _props$childProps3 === void 0 ? void 0 : _props$childProps3.houseNumber))), /*#__PURE__*/_react.default.createElement(_core.Grid, (0, _extends2.default)({
    item: true,
    xs: 12
  }, grid.apartmentNumber), /*#__PURE__*/_react.default.createElement(_index.TextField, (0, _extends2.default)({
    label: "\u05DE\u05E1\u05E4\u05E8 \u05D3\u05D9\u05E8\u05D4"
  }, getFieldProps('apartmentNumber'), {
    value: apartmentNumber,
    maxLength: 4,
    type: "phone",
    "data-hrl-bo": "".concat(dataHrlBo, "-apartmentNumber"),
    onChange: function onChange(e) {
      return handleChange('apartmentNumber')((0, _misc.getEventData)(fieldName, e.target.value));
    }
  }, (_props$childProps4 = props.childProps) === null || _props$childProps4 === void 0 ? void 0 : _props$childProps4.apartmentNumber))), /*#__PURE__*/_react.default.createElement(_core.Grid, (0, _extends2.default)({
    item: true,
    xs: 12
  }, grid.postalCode), /*#__PURE__*/_react.default.createElement(_index.TextField, (0, _extends2.default)({
    label: "\u05DE\u05D9\u05E7\u05D5\u05D3"
  }, getFieldProps('postalCode'), {
    value: postalCode,
    mask: '9999999',
    maxLength: 7,
    "data-hrl-bo": "".concat(dataHrlBo, "-postalCode"),
    onChange: function onChange(e) {
      return handleChange('postalCode')((0, _misc.getEventData)(fieldName, e.target.value));
    }
  }, (_props$childProps5 = props.childProps) === null || _props$childProps5 === void 0 ? void 0 : _props$childProps5.postalCode))), /*#__PURE__*/_react.default.createElement(_core.Grid, (0, _extends2.default)({
    item: true,
    xs: 12
  }, grid.floorNumber), /*#__PURE__*/_react.default.createElement(_index.TextField, (0, _extends2.default)({
    label: "\u05E7\u05D5\u05DE\u05D4"
  }, getFieldProps('floorNumber'), {
    value: floorNumber,
    maxLength: 2,
    type: "phone",
    "data-hrl-bo": "".concat(dataHrlBo, "-floorNumber"),
    onChange: function onChange(e) {
      return handleChange('floorNumber')((0, _misc.getEventData)(fieldName, e.target.value));
    }
  }, (_props$childProps6 = props.childProps) === null || _props$childProps6 === void 0 ? void 0 : _props$childProps6.floorNumber))), /*#__PURE__*/_react.default.createElement(_core.Grid, (0, _extends2.default)({
    item: true,
    xs: 12
  }, grid.numberOfApartments), /*#__PURE__*/_react.default.createElement(_index.TextField, (0, _extends2.default)({
    label: "\u05DE\u05E1' \u05E7\u05D5\u05DE\u05D5\u05EA \u05D1\u05D1\u05E0\u05D9\u05D9\u05DF"
  }, getFieldProps('numberOfApartments'), {
    value: numberOfApartments,
    maxLength: 3,
    type: "phone",
    "data-hrl-bo": "".concat(dataHrlBo, "-numberOfApartments"),
    onChange: function onChange(e) {
      return handleChange('numberOfApartments')((0, _misc.getEventData)(fieldName, e.target.value));
    }
  }, (_props$childProps7 = props.childProps) === null || _props$childProps7 === void 0 ? void 0 : _props$childProps7.numberOfApartments))));
};

var singleObjectValueStruct = _propTypes.default.shape({
  label: _propTypes.default.any.isRequired,
  value: _propTypes.default.any.isRequired
});

var sizesStruct = _propTypes.default.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);

var singleObjectSizeStruct = _propTypes.default.shape({
  xs: sizesStruct,
  md: sizesStruct,
  lg: sizesStruct,
  xl: sizesStruct
});

var propTypes = {
  /** Base url for service to be located on different envs */
  baseUrl: _propTypes.default.string,

  /** Callback fired when the value is changed. */
  onChange: _propTypes.default.func,

  /** Function to be called when input was blur */
  onBlur: _propTypes.default.func,

  /** The value of the input element, required for a controlled component. */
  value: _propTypes.default.shape({
    city: singleObjectValueStruct,
    street: singleObjectValueStruct,
    houseNumber: singleObjectValueStruct,
    postalCode: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    apartmentNumber: _propTypes.default.string,
    floorNumber: _propTypes.default.string,
    numberOfApartments: _propTypes.default.string
  }),

  /** The grid items sizing */
  grid: _propTypes.default.shape({
    city: singleObjectSizeStruct,
    street: singleObjectSizeStruct,
    houseNumber: singleObjectSizeStruct,
    postalCode: singleObjectSizeStruct,
    apartmentNumber: singleObjectSizeStruct,
    floorNumber: singleObjectSizeStruct,
    numberOfApartments: singleObjectSizeStruct
  }),

  /** The grid container spacing */
  spacing: _propTypes.default.number,

  /** Name attribute of the input element. */
  name: _propTypes.default.string,

  /** Custom child props */
  childProps: _propTypes.default.shape({
    city: _propTypes.default.object,
    street: _propTypes.default.object,
    houseNumber: _propTypes.default.object,
    postalCode: _propTypes.default.object,
    apartmentNumber: _propTypes.default.object,
    floorNumber: _propTypes.default.object,
    numberOfApartments: _propTypes.default.object
  }),
  onCitiesListChange: _propTypes.default.func,
  onStreetsListChange: _propTypes.default.func,
  onHouseNumbersListChange: _propTypes.default.func,

  /** DEV ONLY FLAG!! Pass proxy server url to allow on local */
  proxy: _propTypes.default.string,

  /** Callback for data received from server request */
  onDataReceived: _propTypes.default.func,
  'data-hrl-bo': _propTypes.default.string,
  allowZeroHouseNum: _propTypes.default.bool,
  isFilterByStartWith: _propTypes.default.bool,
  sharedCities: _propTypes.default.array
};
var defaultProps = {
  onDataReceived: function onDataReceived() {},
  onChange: function onChange(e) {},
  spacing: 2,
  allowZeroHouseNum: false,
  isFilterByStartWith: true,
  grid: {
    city: {
      xs: 6
    },
    street: {
      xs: 6
    },
    houseNumber: {
      xs: 6
    },
    postalCode: {
      xs: 6
    },
    floorNumber: {
      xs: 6
    },
    apartmentNumber: {
      xs: 6
    }
  },
  'data-hrl-bo': 'ExpandedAddress',
  value: {
    city: '',
    street: '',
    houseNumber: '',
    postalCode: '',
    floorNumber: '',
    apartmentNumber: ''
  },
  name: 'ExpandedAddress',
  proxy: null,
  onCitiesListChange: function onCitiesListChange() {},
  onStreetsListChange: function onStreetsListChange() {},
  onHouseNumbersListChange: function onHouseNumbersListChange() {}
};
ExpandedAddress.propTypes = _objectSpread(_objectSpread({}, propTypes), _useReduxField.propTypes);
ExpandedAddress.defaultProps = _objectSpread({}, defaultProps);

var ExpandedAddressInner = function ExpandedAddressInner(props) {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, (0, _useReduxField.default)(ExpandedAddress)(props));
};

ExpandedAddressInner.propTypes = _objectSpread(_objectSpread({}, propTypes), _useReduxField.propTypes);
ExpandedAddressInner.defaultProps = _objectSpread({}, defaultProps);
ExpandedAddressInner.displayName = 'ExpandedAddress';
var _default = ExpandedAddressInner;
exports.default = _default;