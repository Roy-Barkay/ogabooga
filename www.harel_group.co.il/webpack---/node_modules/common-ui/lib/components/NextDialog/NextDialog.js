"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _Modal = _interopRequireDefault(require("@material-ui/core/Modal"));

var _core = require("@material-ui/core");

var _styles = require("@material-ui/core/styles");

var _classnames = _interopRequireDefault(require("classnames"));

var _commonIcons = require("common-icons");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _printVersion = _interopRequireDefault(require("../../utils/printVersion"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    background: {
      display: function display(props) {
        return props.open ? 'block' : 'none';
      },
      backgroundColor: 'rgba(226, 236, 249, 0.95)',
      width: '100%',
      height: '100%',
      top: 0,
      right: 0,
      position: 'fixed',
      zIndex: 10
    },
    root: (0, _defineProperty2.default)({
      width: function width(props) {
        return props.width ? props.width : 630;
      },
      margin: function margin(props) {
        return props.isCenter ? '0' : '100px auto';
      },
      padding: theme.spacing(2),
      position: function position(props) {
        return props.isCenter ? 'absolute' : 'relative';
      },
      boxShadow: '0 0 18px 0 rgba(0, 62, 137, 0.15)',
      outline: 'none',
      top: function top(props) {
        return props.isCenter && '50%';
      },
      left: function left(props) {
        return props.isCenter && '50%';
      },
      transform: function transform(props) {
        return props.isCenter && 'translate(-50%, -50%)';
      }
    }, theme.breakpoints.down('md'), {
      width: function width(props) {
        return props.mdWidth || '85%';
      },
      margin: '30px auto'
    }),
    title: {
      fontWeight: 400,
      marginBottom: theme.spacing(2),
      textAlign: 'center'
    },
    dialogIcon: {
      position: 'relative',
      width: 90,
      margin: '0 auto',
      top: '-70px',
      marginBottom: function marginBottom(props) {
        return props.iconMarginBottom ? props.iconMarginBottom : '-80px';
      },
      fontSize: 80,
      textAlign: 'center',
      color: '#2d76cb'
    },
    closeIconButton: {
      position: 'absolute',
      top: theme.spacing(1),
      left: theme.spacing(1)
    },
    scrollable: {
      overflowY: 'auto'
    }
  };
});

var NextDialog = function NextDialog(props) {
  var _props$dataHrlBo;

  (0, _react.useEffect)(function () {
    return (0, _printVersion.default)();
  }, []);
  var classes = useStyles(props);
  var hrlBo = (_props$dataHrlBo = props['data-hrl-bo']) !== null && _props$dataHrlBo !== void 0 ? _props$dataHrlBo : 'next-dialog';
  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.background,
    onClick: !props.disableBackgroundClick && props.onClose,
    "data-hrl-bo": hrlBo
  }, /*#__PURE__*/_react.default.createElement(_Modal.default, {
    open: props.open,
    onClose: props.onClose,
    hideBackdrop: true,
    "aria-labelledby": "simple-modal-title",
    "aria-describedby": "simple-modal-description",
    role: "dialog",
    className: (0, _classnames.default)('modal-dialog', classes.scrollable)
  }, /*#__PURE__*/_react.default.createElement(_core.Paper, {
    variant: "outlined",
    className: classes.root,
    onClick: function onClick(e) {
      return e.stopPropagation();
    }
  }, props.icon && /*#__PURE__*/_react.default.createElement("div", {
    className: classes.dialogIcon,
    "data-hrl-bo": "".concat(hrlBo, "_icon")
  }, props.icon), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.closeIconButton,
    "data-hrl-bo": "".concat(hrlBo, "_close_button")
  }, /*#__PURE__*/_react.default.createElement(_core.IconButton, {
    size: "small",
    color: "primary",
    onClick: props.onClose,
    "aria-label": 'סגור חלון'
  }, props.iconClose ? props.iconClose : /*#__PURE__*/_react.default.createElement(_commonIcons.IconX, null))), props.title && /*#__PURE__*/_react.default.createElement(_core.Typography, {
    variant: "h1",
    className: classes.title,
    "data-hrl-bo": "".concat(hrlBo, "_title")
  }, props.title), /*#__PURE__*/_react.default.createElement("div", {
    "data-hrl-bo": "".concat(hrlBo, "_content")
  }, props.children))));
};

NextDialog.propTypes = {
  title: _propTypes.default.string,
  onClose: _propTypes.default.func,
  icon: _propTypes.default.node,
  open: _propTypes.default.bool,
  isCenter: _propTypes.default.bool,
  disableBackgroundClick: _propTypes.default.bool,
  iconClose: _propTypes.default.node,
  width: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.string]),
  // support str and num: ['50%', 450, '-10px']
  mdWidth: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.string]),
  iconMarginBottom: _propTypes.default.string,
  children: _propTypes.default.node,
  'data-hrl-bo': _propTypes.default.string,
  position: _propTypes.default.oneOf(['middle', 'top'])
};
NextDialog.defaultProps = {
  position: 'middle'
};
var _default = NextDialog;
exports.default = _default;