"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _TooltipedComponent = _interopRequireDefault(require("./TooltipedComponent.style"));
var _commonIcons = require("common-icons");
var _ = require("../../");
var _ClickAwayListener = _interopRequireDefault(require("@material-ui/core/ClickAwayListener"));
var _printVersion = _interopRequireDefault(require("../../utils/printVersion"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var TooltipedComponent = function TooltipedComponent(_ref) {
  var component = _ref.component,
    tooltipPlacement = _ref.tooltipPlacement,
    children = _ref.children;
  (0, _react.useEffect)(function () {
    return (0, _printVersion.default)();
  }, []);
  var classes = (0, _TooltipedComponent.default)();
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    open = _useState2[0],
    setOpen = _useState2[1];
  var toggleTooltip = function toggleTooltip() {
    return setOpen(!open);
  };
  var closeTooltip = function closeTooltip() {
    return setOpen(false);
  };
  var BodyWrapper = /*#__PURE__*/_react.default.createElement(_ClickAwayListener.default, {
    onClickAway: closeTooltip
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.componentWrapper
  }, /*#__PURE__*/_react.default.createElement(_commonIcons.IconX, {
    onClick: closeTooltip,
    className: classes.xIcon
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.componentGrid
  }, component)));
  return /*#__PURE__*/_react.default.createElement(_.Tooltip, {
    arrow: true,
    interactive: true,
    disableHoverListener: true,
    onClose: closeTooltip,
    title: BodyWrapper,
    placement: tooltipPlacement,
    open: open
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.iconWrapper,
    onClick: toggleTooltip
  }, children));
};
TooltipedComponent.propTypes = {
  component: _propTypes.default.node.isRequired,
  children: _propTypes.default.node,
  tooltipPlacement: _propTypes.default.oneOf(['bottom-start', 'bottom', 'bottom-end', 'right-start', 'right', 'right-end', 'top-start', 'top', 'top-end', 'left-start', 'left', 'left-end'])
};
TooltipedComponent.defaultProps = {
  tooltipPlacement: 'top'
};
var _default = TooltipedComponent;
exports.default = _default;