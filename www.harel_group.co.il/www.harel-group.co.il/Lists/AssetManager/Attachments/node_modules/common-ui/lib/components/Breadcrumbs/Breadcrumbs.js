"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _Breadcrumbs = _interopRequireDefault(require("@material-ui/core/Breadcrumbs"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _utils = require("../../utils");
var _printVersion = _interopRequireDefault(require("../../utils/printVersion"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function Breadcrumbs(props) {
  (0, _react.useEffect)(function () {
    return (0, _printVersion.default)();
  }, []);
  var pickedProps = (0, _utils.pick)(['children', 'classes', 'component', 'itemsAfterCollapse', 'itemsBeforeCollapse', 'maxItems', 'separator'], props);
  return /*#__PURE__*/_react.default.createElement(_Breadcrumbs.default, pickedProps, pickedProps.children);
}
Breadcrumbs.propTypes = {
  /**
   * The breadcrumb children.
   */
  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]).isRequired,
  /**
   * Override or extend the styles applied to the component. See CSS API below for more details.
   */
  classes: _propTypes.default.object,
  /**
   * The component used for the root node. Either a string to use a DOM element or a component. By default, it maps the variant to a good default headline component.
   */
  component: _propTypes.default.elementType,
  /**
   * If max items is exceeded, the number of items to show after the ellipsis.
   */
  itemsAfterCollapse: _propTypes.default.number,
  /**
   * If max items is exceeded, the number of items to show before the ellipsis.
   */
  itemsBeforeCollapse: _propTypes.default.number,
  /**
   * Specifies the maximum number of breadcrumbs to display. When there are more than the maximum number, only the first and last will be shown, with an ellipsis in between.
   */
  maxItems: _propTypes.default.number,
  /**
   * Display button with full width inside its container
   */
  separator: _propTypes.default.string
};
Breadcrumbs.defaultProps = {
  component: 'nav',
  itemsAfterCollapse: 1,
  itemsBeforeCollapse: 1,
  maxItems: 8,
  separator: '/'
};
var _default = Breadcrumbs;
exports.default = _default;