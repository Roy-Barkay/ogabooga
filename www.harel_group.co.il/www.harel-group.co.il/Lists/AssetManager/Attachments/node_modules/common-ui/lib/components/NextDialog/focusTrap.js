"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var focusTrap = function focusTrap(element) {
  var firstElementSetFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var focusableElements = element.querySelectorAll('a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input:not([disabled]), select:not([disabled]), [role="button"], [role="radio"], [role="checkbox"], [role="combobox"]');
  var firstFocusableElement = focusableElements[0];
  var lastFocusableElement = focusableElements[(focusableElements === null || focusableElements === void 0 ? void 0 : focusableElements.length) - 1];
  firstElementSetFocus && (firstFocusableElement === null || firstFocusableElement === void 0 ? void 0 : firstFocusableElement.focus());
  element.addEventListener('keydown', function (e) {
    var isPressedTab = e.keyCode === 9 || e.key === 'Tab';
    if (!isPressedTab) {
      return;
    }
    if (e.shiftKey) {
      if (document.activeElement === firstFocusableElement) {
        lastFocusableElement === null || lastFocusableElement === void 0 ? void 0 : lastFocusableElement.focus();
        e.preventDefault();
      }
    } else {
      if (document.activeElement === lastFocusableElement) {
        firstFocusableElement === null || firstFocusableElement === void 0 ? void 0 : firstFocusableElement.focus();
        e.preventDefault();
      }
    }
  });
};
var _default = focusTrap;
exports.default = _default;