"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _Grid = _interopRequireDefault(require("../Grid"));
var _index = require("../../index");
var _useReduxField = _interopRequireWildcard(require("../HOC/useReduxField"));
var _printVersion = _interopRequireDefault(require("../../utils/printVersion"));
var _excluded = ["spacing", "grid", "useRedux", "disabled"];
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var ContactFormInner = function ContactFormInner(_ref) {
  var _props$childProps, _props$childProps2;
  var spacing = _ref.spacing,
    grid = _ref.grid,
    useRedux = _ref.useRedux,
    disabled = _ref.disabled,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  (0, _react.useEffect)(function () {
    return (0, _printVersion.default)();
  }, []);
  var form = useRedux({
    phone: props.value && props.value.phone || '',
    email: props.value && props.value.email || ''
  });
  var getFieldProps = form.getFieldProps;
  var dataHrlBo = props['data-hrl-bo'];
  return /*#__PURE__*/_react.default.createElement(_Grid.default, {
    container: true,
    spacing: spacing
  }, /*#__PURE__*/_react.default.createElement(_Grid.default, (0, _extends2.default)({
    item: true,
    xs: 12
  }, grid.phone), /*#__PURE__*/_react.default.createElement(_index.TextField, (0, _extends2.default)({
    disabled: disabled
  }, getFieldProps('phone'), {
    placeholder: "(xxx) xxx-xxxx",
    mask: ['(', /[0-9]/, /\d/, /\d/, ')', ' ', /\d/, /\d/, /\d/, '-', /\d/, /\d/, /\d/, /\d/],
    type: "tel",
    name: "phone",
    id: "phone-contact",
    directionLtr: true,
    "data-hrl-bo": "".concat(dataHrlBo, "-phone"),
    label: "\u05DE\u05E1\u05E4\u05E8 \u05D8\u05DC\u05E4\u05D5\u05DF"
  }, (_props$childProps = props.childProps) === null || _props$childProps === void 0 ? void 0 : _props$childProps.phone, {
    inputProps: {
      type: 'tel'
    }
  }))), /*#__PURE__*/_react.default.createElement(_Grid.default, (0, _extends2.default)({
    item: true,
    xs: 12
  }, grid.email), /*#__PURE__*/_react.default.createElement(_index.TextField, (0, _extends2.default)({
    disabled: disabled
  }, getFieldProps('email'), {
    type: "email",
    name: "email",
    inputmode: "email",
    directionLtr: true,
    id: "email-contact",
    placeholder: "email@domain.com",
    label: "\u05DB\u05EA\u05D5\u05D1\u05EA \u05D0\u05D9\u05DE\u05D9\u05D9\u05DC",
    "data-hrl-bo": "".concat(dataHrlBo, "-email")
  }, (_props$childProps2 = props.childProps) === null || _props$childProps2 === void 0 ? void 0 : _props$childProps2.email, {
    inputProps: {
      type: 'email'
    }
  }))));
};
var sizesStruct = _propTypes.default.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);
var singleObjectSizeStruct = _propTypes.default.shape({
  xs: sizesStruct,
  md: sizesStruct,
  lg: sizesStruct,
  xl: sizesStruct
});
var propTypes = {
  /**
   * Custom props
   */
  childProps: _propTypes.default.shape({
    phone: _propTypes.default.object,
    email: _propTypes.default.object
  }),
  /** Callback fired when the value is changed. */
  onChange: _propTypes.default.func,
  /**
   * Function to be called when input was blur
   */
  onBlur: _propTypes.default.func,
  /**
   * Disables the entire form
   */
  disabled: _propTypes.default.bool,
  /** The value of the input element, required for a controlled component. */
  value: _propTypes.default.shape({
    phone: _propTypes.default.string,
    email: _propTypes.default.string
  }),
  /** The grid items sizing */
  grid: _propTypes.default.shape({
    phone: singleObjectSizeStruct,
    email: singleObjectSizeStruct
  }),
  /** The grid container spacing */
  spacing: _propTypes.default.number,
  /** Name attribute of the input element. */
  name: _propTypes.default.string,
  /**    The helper text content. */
  helperText: _propTypes.default.shape({
    phone: _propTypes.default.string,
    email: _propTypes.default.string
  }),
  /** If true, the label is displayed as required and the input element` will be required. */
  required: _propTypes.default.bool,
  /** If true, the label will be displayed in an error state. */
  // error: PropTypes.oneOf([
  //     PropTypes.bool,
  //     PropTypes.shape({
  //         phone: PropTypes.oneOfType([PropTypes.bool, PropTypes.string, null]),
  //         email: PropTypes.oneOfType([PropTypes.bool, PropTypes.string, null]),
  //     }),
  // ]),
  'data-hrl-bo': _propTypes.default.string
};
var defaultProps = {
  onChange: function onChange(e) {},
  disabled: false,
  spacing: 2,
  value: {
    phone: '',
    email: ''
  },
  grid: {
    phone: {
      xs: 6
    },
    email: {
      xs: 6
    }
  },
  'data-hrl-bo': 'contact-form',
  name: 'contact-form',
  childProps: {
    email: {},
    phone: {}
  }
};
ContactFormInner.propTypes = _objectSpread(_objectSpread({}, propTypes), _useReduxField.propTypes);
ContactFormInner.defaultProps = _objectSpread({}, defaultProps);
var ContactForm = function ContactForm(props) {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, (0, _useReduxField.default)(ContactFormInner)(props));
};
ContactForm.propTypes = _objectSpread(_objectSpread({}, propTypes), _useReduxField.propTypes);
ContactForm.defaultProps = _objectSpread({}, defaultProps);
ContactForm.displayName = 'ContactForm';
var _default = ContactForm;
exports.default = _default;