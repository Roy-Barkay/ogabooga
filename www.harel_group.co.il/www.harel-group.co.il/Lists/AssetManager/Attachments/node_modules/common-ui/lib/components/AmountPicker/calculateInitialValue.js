"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calculateInitialValue = void 0;
var isNumber = function isNumber(n) {
  return typeof n === 'number' && isFinite(n);
};
var isNumbers = function isNumbers() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return args.reduce(function (a, n) {
    return a && isNumber(n);
  }, true);
};
var calculateInitialValue = function calculateInitialValue() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    val = _ref.val,
    min = _ref.min,
    max = _ref.max;
  if (typeof val === 'string') {
    val = parseFloat(val.replace(/[^0-9.-]/g, ''));
  }
  switch (true) {
    case isNumbers(val, min, max) && max >= val && val >= min:
      return val;
    case isNumbers(val, max) && val > max:
      return max;
    case isNumbers(val, min) && val < min:
      return min;
    case isNumbers(max, min):
      return Math.min(max, min);
    case isNumbers(val, min):
      return Math.max(val, min);
    case isNumbers(val, max):
      return Math.min(val, max);
    case !isNumber(val) && isNumber(min):
      return min;
    case !isNumber(val) && isNumber(max):
      return Math.min(max, 0);
    default:
      return val || 0;
  }
};
exports.calculateInitialValue = calculateInitialValue;