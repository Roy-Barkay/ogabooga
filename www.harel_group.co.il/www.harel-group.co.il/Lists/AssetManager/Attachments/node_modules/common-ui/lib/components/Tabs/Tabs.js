"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _Tabs = _interopRequireDefault(require("@material-ui/core/Tabs"));
var _Tab = _interopRequireDefault(require("@material-ui/core/Tab"));
var _utils = require("../../utils");
var _TabPanel = _interopRequireDefault(require("./TabPanel"));
var _Tabs2 = _interopRequireDefault(require("./Tabs.style"));
var _printVersion = _interopRequireDefault(require("../../utils/printVersion"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function Tabs(props) {
  (0, _react.useEffect)(function () {
    return (0, _printVersion.default)();
  }, []);
  var classes = (0, _Tabs2.default)();
  var items = props.items,
    onChange = props.onChange,
    value = props.value,
    scrollable = props.scrollable,
    hrlBo = props.hrlBo,
    orientation = props.orientation,
    variant = props.variant;
  var tabList = items.map(function (item, index) {
    var data = {};
    if ((0, _utils.isObject)(item)) {
      data = (0, _utils.pick)(['label', 'disabled', 'icon', 'value', 'wrapped', 'helperText', 'className'], item);
    } else {
      data.label = item;
    }
    data.key = "".concat(data.label, "-").concat(index);
    data.disableFocusRipple = true;
    data.disableRipple = true;
    data.scrollable = scrollable;
    data.title = data.helperText || '';
    data.className = data.className || '';
    return /*#__PURE__*/_react.default.createElement(_Tab.default, (0, _extends2.default)({
      "data-hrl-bo": "".concat(hrlBo, "-").concat(index)
    }, data));
  });
  return /*#__PURE__*/_react.default.createElement(_Tabs.default, {
    orientation: orientation,
    variant: variant,
    value: value,
    classes: {
      root: classes.root
    },
    onChange: onChange
  }, tabList);
}
Tabs.TabPanel = _TabPanel.default;
Tabs.propTypes = {
  /** Default selected value */
  value: _propTypes.default.node,
  /** On change event handler */
  onChange: _propTypes.default.func,
  /** Array containing the tab items */
  items: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.shape({
    label: _propTypes.default.node.isRequired,
    disabled: _propTypes.default.bool,
    icon: _propTypes.default.node,
    value: _propTypes.default.any,
    wrapped: _propTypes.default.bool,
    helperText: _propTypes.default.string,
    className: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string])
  }), _propTypes.default.string])).isRequired,
  /** The tabs orientation (layout flow direction). */
  orientation: _propTypes.default.oneOf(['horizontal', 'vertical']),
  /** Determines additional display behavior of the tabs: - scrollable will invoke scrolling properties and allow for horizontally scrolling (or swiping) of the tab bar. -fullWidth will make the tabs grow to use all the available space, which should be used for small views, like on mobile. - standard will render the default state. */
  variant: _propTypes.default.oneOf(['standard', 'scrollable', 'fullWidth']),
  scrollable: _propTypes.default.bool,
  /** Data hrl bo attribute for automation testing. */
  hrlBo: _propTypes.default.string
};
Tabs.defaultProps = {
  items: [],
  value: 0,
  orientation: 'horizontal',
  variant: 'standard',
  onChange: function onChange() {}
};
var _default = Tabs;
exports.default = _default;