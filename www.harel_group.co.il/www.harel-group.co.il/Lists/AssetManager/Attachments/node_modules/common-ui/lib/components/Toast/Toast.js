"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _Snackbar = _interopRequireDefault(require("@material-ui/core/Snackbar"));
var _commonIcons = require("common-icons");
var _IconButton = _interopRequireDefault(require("@material-ui/core/IconButton"));
var _SnackbarContent = _interopRequireDefault(require("@material-ui/core/SnackbarContent"));
var _Toast = _interopRequireDefault(require("./Toast.style"));
var _clsx2 = _interopRequireDefault(require("clsx"));
var _Slide = _interopRequireDefault(require("@material-ui/core/Slide"));
var _printVersion = _interopRequireDefault(require("../../utils/printVersion"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function SlideTransitionUp(props) {
  return /*#__PURE__*/_react.default.createElement(_Slide.default, (0, _extends2.default)({}, props, {
    direction: "up"
  }));
}
function SlideTransitionDown(props) {
  return /*#__PURE__*/_react.default.createElement(_Slide.default, (0, _extends2.default)({}, props, {
    direction: "down"
  }));
}
function Toast(props) {
  (0, _react.useEffect)(function () {
    return (0, _printVersion.default)();
  }, []);
  var classes = (0, _Toast.default)();
  var open = props.open,
    children = props.children,
    closeAction = props.closeAction,
    hideDuration = props.hideDuration,
    position = props.position,
    variant = props.variant,
    action = props.action,
    showClose = props.showClose,
    id = props.id;
  var autoHideDuration = !!hideDuration ? hideDuration : null;
  var actions = Array.isArray(action) ? action : [action];
  if (!!closeAction && showClose) {
    actions.push( /*#__PURE__*/_react.default.createElement(_IconButton.default, {
      className: classes.close,
      key: "close",
      "aria-label": "\u05E1\u05D2\u05D5\u05E8",
      onClick: function onClick() {
        closeAction(props.id);
      }
    }, /*#__PURE__*/_react.default.createElement(_commonIcons.IconX, null)));
  }
  return /*#__PURE__*/_react.default.createElement(_Snackbar.default, {
    open: open,
    onClose: function onClose() {
      closeAction(props.id);
    },
    autoHideDuration: autoHideDuration,
    "data-hrl-bo": "toast",
    anchorOrigin: position,
    TransitionComponent: position.vertical === 'bottom' ? SlideTransitionUp : SlideTransitionDown
  }, /*#__PURE__*/_react.default.createElement(_SnackbarContent.default, {
    className: (0, _clsx2.default)(classes.content, (0, _defineProperty2.default)({}, classes[variant], variant !== 'normal')),
    action: actions,
    message: children
  }));
}
Toast.propTypes = {
  /**
   * If true, toast is open
   */
  open: _propTypes.default.bool.isRequired,
  /**
   * Toast action(s) to display
   */
  action: _propTypes.default.node,
  /**
   * Function handling toast closing. Return id toast.
   */
  closeAction: _propTypes.default.func.isRequired,
  /**
   * The number of milliseconds to wait before automatically calling the onClose function.
   * disable this behavior with the null value.
   */
  hideDuration: _propTypes.default.number,
  /**
   * The position of the toast on screen
   */
  position: _propTypes.default.shape({
    horizontal: _propTypes.default.oneOf(['left', 'center', 'right']).isRequired,
    vertical: _propTypes.default.oneOf(['top', 'bottom']).isRequired
  }),
  /**
   * Toast variant look
   */
  variant: _propTypes.default.oneOf(['success', 'warning', 'normal']),
  /**
   * If true show close button
   */
  showClose: _propTypes.default.bool,
  /**
   *  The id of the toast element.
   */
  id: _propTypes.default.string,
  /**
   *    The content of the component.
   */
  children: _propTypes.default.node
};
Toast.defaultProps = {
  hideDuration: null,
  position: {
    vertical: 'bottom',
    horizontal: 'center'
  },
  variant: 'normal',
  showClose: true,
  id: "toast-".concat(Math.floor(Math.random() * 1000) + 1)
};
var _default = Toast;
exports.default = _default;