"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _Option = _interopRequireDefault(require("./Option.style"));
var _propTypes = _interopRequireDefault(require("prop-types"));
function noop() {}
function Option(props) {
  var classes = (0, _Option.default)(props);
  var children = props.children,
    value = props.value,
    checked = props.checked,
    id = props.id,
    name = props.name,
    onChange = props.onChange,
    disabled = props.disabled,
    tabindex = props.tabindex,
    ariaDescribedby = props.ariaDescribedby,
    _props$className = props.className,
    className = _props$className === void 0 ? '' : _props$className,
    error = props.error;
  var hrlBoInput = "".concat(props['data-hrl-bo'], "_input");
  var hrlBoLabel = "".concat(props['data-hrl-bo'], "_label");
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("label", {
    "aria-checked": checked,
    "aria-disabled": disabled,
    htmlFor: id,
    onClick: function onClick(e) {
      if (!disabled) {
        onChange(e);
      }
    },
    onKeyDown: function onKeyDown(e) {
      return props.handleKeyDown(e, tabindex);
    },
    className: "".concat(classes.label, " ").concat(className),
    "data-hrl-bo": hrlBoLabel,
    "aria-describedby": ariaDescribedby
  }, /*#__PURE__*/_react.default.createElement("input", {
    type: "radio",
    name: name,
    value: value,
    id: id,
    checked: checked,
    className: classes.input,
    onChange: onChange,
    disabled: disabled,
    tabIndex: "0",
    "aria-describedby": ariaDescribedby,
    "data-hrl-bo": hrlBoInput,
    "aria-invalid": error
  }), children));
}
Option.propTypes = {
  /**
   * Option value
   */
  value: _propTypes.default.string.isRequired,
  /**
   * Option id
   */
  id: _propTypes.default.string,
  /**
   * Option name
   */
  name: _propTypes.default.string,
  ariaDescribedby: _propTypes.default.string,
  /**
   * If true, Option is disabled
   */
  disabled: _propTypes.default.bool,
  handleKeyDown: _propTypes.default.func,
  /**
   *    The content of the component.
   */
  error: _propTypes.default.bool,
  children: _propTypes.default.node,
  className: _propTypes.default.object,
  tabindex: _propTypes.default.number,
  checked: _propTypes.default.bool,
  onChange: _propTypes.default.func,
  'data-hrl-bo': _propTypes.default.string,
  size: _propTypes.default.oneOf(['medium', 'small'])
};
Option.defaultProps = {
  value: '',
  disabled: false,
  error: false,
  handleKeyDown: noop,
  ariaDescribedby: null,
  size: 'medium'
};
var _default = Option;
exports.default = _default;