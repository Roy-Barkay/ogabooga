"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _Pagination = _interopRequireDefault(require("@material-ui/lab/Pagination"));
var _printVersion = _interopRequireDefault(require("../../utils/printVersion"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function Pagination(props) {
  (0, _react.useEffect)(function () {
    return (0, _printVersion.default)();
  }, []);
  return /*#__PURE__*/_react.default.createElement(_Pagination.default, props);
}
Pagination.propTypes = {
  /** Number of always visible pages at the beginning and end. */
  boundaryCount: _propTypes.default.number,
  /** The active color. */
  color: _propTypes.default.oneOf(['primary', 'secondary', 'standard']),
  /** The total number of pages. */
  count: _propTypes.default.number,
  /** The page selected by default when the component is uncontrolled */
  defaultPage: _propTypes.default.number,
  /** If true, the pagination component will be disabled. */
  disabled: _propTypes.default.bool,
  /** If true, hide the next-page button. */
  hideNextButton: _propTypes.default.bool,
  /** If true, hide the previous-page button. */
  hidePrevButton: _propTypes.default.bool,
  /** Callback fired when the page is changed. */
  onChange: _propTypes.default.func,
  /** The current page */
  page: _propTypes.default.number,
  /** If true, show the first-page button. */
  showFirstButton: _propTypes.default.bool,
  /** If true, show the last-page button. */
  showLastButton: _propTypes.default.bool,
  /** Number of always visible pages before and after the current page. */
  siblingCount: _propTypes.default.number,
  /** The size of the pagination component. */
  size: _propTypes.default.oneOf(['small', 'medium', 'large']),
  /** The variant to use. */
  variant: _propTypes.default.oneOf(['outlined', 'text'])
};
Pagination.defaultProps = {
  boundaryCount: 1,
  color: 'standard',
  count: 1,
  defaultPage: 1,
  disabled: false,
  hideNextButton: false,
  hidePrevButton: false,
  onChange: function onChange() {},
  page: 1,
  showFirstButton: false,
  showLastButton: false,
  siblingCount: 1,
  size: 'medium',
  variant: 'text'
};
var _default = Pagination;
exports.default = _default;