"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _ = require("../..");
var _styles = require("@material-ui/core/styles");
var _Check = _interopRequireDefault(require("@material-ui/icons/Check"));
var _core = require("@material-ui/core");
var _clsx2 = _interopRequireDefault(require("clsx"));
var _printVersion = _interopRequireDefault(require("../../utils/printVersion"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    root: {
      color: theme.palette.primary.main,
      background: '#f4f6fc',
      border: '1px solid #dce3e9',
      borderRadius: theme.spacing(1),
      overflow: 'hidden'
    },
    header: {
      background: '#e3ebf6',
      borderBottom: '1px solid #d5dde3',
      padding: theme.spacing(0.5)
    },
    headerTitle: {
      paddingRight: theme.spacing(2),
      fontWeight: 'bold'
    },
    headerTitleAddon: {
      marginTop: -5
    },
    headerSubTitle: {
      paddingRight: theme.spacing(2),
      verticalAlign: 'top'
    },
    priceBlock: {
      background: '#fff',
      borderRadius: theme.spacing(0.5),
      textAlign: 'center'
    },
    content: {
      padding: theme.spacing(2)
    },
    actions: {
      padding: theme.spacing(2),
      paddingTop: 0
    },
    priceText: {
      fontSize: '2.3rem',
      lineHeight: '2.3rem',
      fontWeight: 'normal',
      marginBottom: '-6px'
    },
    priceCaptionText: {
      fontSize: '0.9rem',
      lineHeight: '0.9rem'
    },
    newShekelSign: {
      fontSize: '0.9rem',
      lineHeight: '0.9rem'
    },
    listCheckSign: {
      color: theme.palette.success.main
    }
  };
});

/**
 * @deprecated
 */
var DataPriceBlock = function DataPriceBlock(props) {
  var _clsx;
  (0, _react.useEffect)(function () {
    return (0, _printVersion.default)();
  }, []);
  var classes = useStyles();
  var renderPriceBox = function renderPriceBox() {
    return /*#__PURE__*/_react.default.createElement(_.Grid, {
      item: true,
      xs: 3
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: classes.priceBlock
    }, /*#__PURE__*/_react.default.createElement(_core.Typography, {
      variant: "h1",
      className: classes.priceText
    }, /*#__PURE__*/_react.default.createElement(_core.Typography, {
      variant: "caption",
      className: classes.newShekelSign
    }, "\u20AA"), props.price), /*#__PURE__*/_react.default.createElement(_core.Typography, {
      className: classes.priceCaptionText,
      variant: "caption"
    }, props.priceLabel)));
  };
  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.root
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: classes.header
  }, /*#__PURE__*/_react.default.createElement(_.Grid, {
    container: true,
    spacing: 0,
    alignItems: "center"
  }, /*#__PURE__*/_react.default.createElement(_.Grid, {
    item: true,
    xs: 9
  }, props.subLabel && /*#__PURE__*/_react.default.createElement(_core.Typography, {
    variant: "caption",
    className: classes.headerSubTitle
  }, props.subLabel), /*#__PURE__*/_react.default.createElement(_core.Typography, {
    variant: "h2",
    className: (0, _clsx2.default)((_clsx = {}, (0, _defineProperty2.default)(_clsx, classes.headerTitle, true), (0, _defineProperty2.default)(_clsx, classes.headerTitleAddon, !!props.subLabel), _clsx))
  }, props.label)), props.price ? renderPriceBox() : null)), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.content
  }, props.contentLabel ? /*#__PURE__*/_react.default.createElement(_core.Typography, {
    variant: "h6"
  }, props.contentLabel) : null, /*#__PURE__*/_react.default.createElement(_core.List, {
    dense: true
  }, props.items.map(function (item, i) {
    return /*#__PURE__*/_react.default.createElement(_core.ListItem, {
      key: i
    }, /*#__PURE__*/_react.default.createElement(_core.ListItemIcon, null, /*#__PURE__*/_react.default.createElement(_Check.default, {
      fontSize: "small",
      className: classes.listCheckSign
    })), item);
  }))), /*#__PURE__*/_react.default.createElement("div", {
    className: classes.actions
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "action"
  }, /*#__PURE__*/_react.default.createElement(_.Button, (0, _extends2.default)({
    onClick: props.onClick,
    fullWidth: true,
    variant: "contained",
    color: "secondary"
  }, props.buttonProps), props.buttonLabel))));
};
DataPriceBlock.propTypes = {
  /** Main title text */
  label: _propTypes.default.string,
  /** Main title sub text */
  subLabel: _propTypes.default.string,
  /** Sub title text */
  contentLabel: _propTypes.default.string,
  /** Price to put in block, no comma required */
  price: _propTypes.default.string,
  /** Small label under the price */
  priceLabel: _propTypes.default.string,
  /** Button text */
  buttonLabel: _propTypes.default.string,
  /** Properties to pass to button */
  buttonProps: _propTypes.default.object,
  /** Array of string to pass to list */
  items: _propTypes.default.arrayOf(_propTypes.default.string),
  /** On click event handler for the button */
  onClick: _propTypes.default.func.isRequired
};
DataPriceBlock.defaultProps = {
  buttonProps: {}
};
var _default = DataPriceBlock;
exports.default = _default;